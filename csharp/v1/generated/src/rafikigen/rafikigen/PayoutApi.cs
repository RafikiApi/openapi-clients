/*
 * Resources
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using rafikigen.Client;
using rafikigen.Model;

namespace rafikigen.rafikigen
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPayoutApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// List
        /// </summary>
        /// <remarks>
        /// Using this endpoint, you can list all your historical payouts with an optional dates filter. Considering that the returned data may contain thousands of records, the results will be paginated with a cursor [(see pagination docs)](pagination), allowing you to scroll through the data using multiple requests as necessary.     
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createdAtFrom">Filters for payouts created from the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 00:00:00 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="createdAtTo">Filters for payouts created before the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 23:59:59 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="pagingLimit">The count of items returned as part of the pagination cursor iteration, minimum value is 1 and maximum 50 (optional)</param>
        /// <param name="pagingAfter">The base64 URL encoded cursor used to access the next set of paginated results (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PayoutsGet200Response</returns>
        PayoutsGet200Response PayoutsGet(string? createdAtFrom = default(string?), string? createdAtTo = default(string?), int? pagingLimit = default(int?), string? pagingAfter = default(string?), int operationIndex = 0);

        /// <summary>
        /// List
        /// </summary>
        /// <remarks>
        /// Using this endpoint, you can list all your historical payouts with an optional dates filter. Considering that the returned data may contain thousands of records, the results will be paginated with a cursor [(see pagination docs)](pagination), allowing you to scroll through the data using multiple requests as necessary.     
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createdAtFrom">Filters for payouts created from the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 00:00:00 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="createdAtTo">Filters for payouts created before the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 23:59:59 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="pagingLimit">The count of items returned as part of the pagination cursor iteration, minimum value is 1 and maximum 50 (optional)</param>
        /// <param name="pagingAfter">The base64 URL encoded cursor used to access the next set of paginated results (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PayoutsGet200Response</returns>
        ApiResponse<PayoutsGet200Response> PayoutsGetWithHttpInfo(string? createdAtFrom = default(string?), string? createdAtTo = default(string?), int? pagingLimit = default(int?), string? pagingAfter = default(string?), int operationIndex = 0);
        /// <summary>
        /// Get
        /// </summary>
        /// <remarks>
        /// This endpoint enables the retrieval of a previously accepted payout using its unique ID (&#x60;pyt-xxx&#x60;) or the &#x60;custom_id&#x60; submitted when creating it. Its primary purpose is to periodically check for changes in the payout status.  To learn more about the lifecycle of payouts, please refer to the dedicated section under the [Send Money](post_payouts) endpoint. 
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The Payout ID (pyt-xxx) or the custom_id provided at the time of payout creation</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PayoutsIdGet200Response</returns>
        PayoutsIdGet200Response PayoutsIdGet(string id, int operationIndex = 0);

        /// <summary>
        /// Get
        /// </summary>
        /// <remarks>
        /// This endpoint enables the retrieval of a previously accepted payout using its unique ID (&#x60;pyt-xxx&#x60;) or the &#x60;custom_id&#x60; submitted when creating it. Its primary purpose is to periodically check for changes in the payout status.  To learn more about the lifecycle of payouts, please refer to the dedicated section under the [Send Money](post_payouts) endpoint. 
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The Payout ID (pyt-xxx) or the custom_id provided at the time of payout creation</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PayoutsIdGet200Response</returns>
        ApiResponse<PayoutsIdGet200Response> PayoutsIdGetWithHttpInfo(string id, int operationIndex = 0);
        /// <summary>
        /// Create
        /// </summary>
        /// <remarks>
        /// The payout resource finds its application in various scenarios where funds need to be disbursed electronically; For example, but not limited to, money remittance services or businesses that need to disburse salaries to their employees.  Regardless of your specific use case, this endpoint has you covered, offering a versatile API to facilitate money disbursement from your [local wallets](get_wallets) to designated recipients (a.k.a [payment accounts](post_payment-accounts)).  &gt; ‚ÑπÔ∏è Lifecycle &gt; &gt; If the request you submit meets our minimum validation standards for processing the payout, our server will accept the request. It will defer the execution to a background asynchronous process, and in response, send you an HTTP 202 status code, along with the payout unique identifier. &gt; &lt;br&gt; &gt; Upon acceptance, the payout is marked as pending. Your client program will need to poll at intervals to [query the payout state](get_payouts-id) and determine whether it has succeeded or not. After the payout is completed, provided [webhook notifications](webhooks) are set up, Rafiki will also dispatch [payout.state-updated](payoutstate-updated) events &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout States&lt;/summary&gt; &gt; &lt;br&gt; &gt;  &lt;table&gt; &gt;    &lt;thead&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;State&lt;/th&gt; &gt;            &lt;th&gt;Description&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/thead&gt; &gt;    &lt;tbody&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;‚è≥&lt;br&gt;PENDING&lt;/th&gt; &gt;            &lt;th&gt;Your payout has been accepted, and it is currently awaiting processing.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üéâ&lt;br&gt;SENT&lt;/th&gt; &gt;           &lt;th&gt;The payout has been successfully processed, and the intended recipient should have received the funds.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üîô&lt;br&gt;REVERSED&lt;/th&gt; &gt;           &lt;th&gt;Upon reaching the \&quot;SENT\&quot; state, you can request a manual reversal (for instance, if funds were sent to the wrong recipient) by contacting our support team. Please be aware that there is no programmatic API available for this process yet. This state indicates a successful reversal.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üôÖ&lt;br&gt;CANCELLED&lt;/th&gt; &gt;           &lt;th&gt;If the payout has not yet reached the intended recipient, you have the option to request manual cancellation by reaching out to our support team (please note that there is no programmatic API for this yet). This state signifies that the payout has been successfully canceled.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üíî&lt;br&gt;FAILED&lt;/th&gt; &gt;           &lt;th&gt; &gt;               The funds did not reach the intended recipient due to a failure. If the \&quot;context\&quot; property does not provide specific information about the reason for the failure, please contact our customer support for assistance. &gt;           &lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/tbody&gt; &gt;  &lt;/table&gt; &gt;  &lt;/details&gt; &gt; &lt;br&gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout state context&lt;/summary&gt; &gt; &lt;br&gt; &gt; When a payout fails, the \&quot;context\&quot; property of the state object will provide additional information about the reason for the failure. The table below outlines the possible values for this property. &gt; &gt; #### &#x60;WALLET_INSUFFICIENT_BALANCE&#x60; &gt; &gt; The selected wallet currently doesn&#39;t have enough money to process the payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_INVALID_ACCOUNT_NUMBER&#x60; &gt; &gt; The account number provided is invalid. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_BALANCE_MAXED_OUT&#x60; &gt; &gt; The payment account balance has reached the maximum allowed. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_PER_TRANSACTION_LIMIT_REACHED&#x60; &gt; &gt; The amount to be sent exceeds the maximum allowed per transaction for this payment account &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_DAILY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the daily limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_MONTHLY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the monthly limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached a limit but we don&#39;t know which one. &lt;br&gt;&lt;br&gt; &gt; &gt;  &lt;/details&gt;  &gt; ‚ö†Ô∏è Compliance requirements &gt; &gt; Depending on the country and/or bank you plan to disburse money to, there are specific compliance and regulatory requirements that must be adhered to. For example, some countries might necessitate more comprehensive sender details or impose limits on minimum/maximum payout amounts. &gt; &lt;br&gt; &gt; We understand that navigating these varying rules for different countries can be complex, considering the multitude of combinations possible. To simplify this process, you can detail the requirements for each country listed below. &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∞üá™ Kenya&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;140 KES&lt;/td&gt; &gt;                             &lt;td&gt;500,000 KES&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá≥üá¨ Nigeria&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;100 NGN&lt;/td&gt; &gt;                             &lt;td&gt; - &lt;/td&gt; &lt;!- - TODO - -&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üáπüáø Tanzania&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;2,500 TZS&lt;/td&gt; &gt;                             &lt;td&gt;1,000,000 TZS&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∑üáº Rwanda&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;500 RWF&lt;/td&gt; &gt;                             &lt;td&gt;-&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt;
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xIdempotencyKey">üö®Ô∏è Prevent duplicate payouts! See: [x-idempotency-key security scheme](idempotency)</param>
        /// <param name="openapiPayoutCreateRequest">The payout</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PayoutsPost202Response</returns>
        PayoutsPost202Response PayoutsPost(string xIdempotencyKey, OpenapiPayoutCreateRequest openapiPayoutCreateRequest, int operationIndex = 0);

        /// <summary>
        /// Create
        /// </summary>
        /// <remarks>
        /// The payout resource finds its application in various scenarios where funds need to be disbursed electronically; For example, but not limited to, money remittance services or businesses that need to disburse salaries to their employees.  Regardless of your specific use case, this endpoint has you covered, offering a versatile API to facilitate money disbursement from your [local wallets](get_wallets) to designated recipients (a.k.a [payment accounts](post_payment-accounts)).  &gt; ‚ÑπÔ∏è Lifecycle &gt; &gt; If the request you submit meets our minimum validation standards for processing the payout, our server will accept the request. It will defer the execution to a background asynchronous process, and in response, send you an HTTP 202 status code, along with the payout unique identifier. &gt; &lt;br&gt; &gt; Upon acceptance, the payout is marked as pending. Your client program will need to poll at intervals to [query the payout state](get_payouts-id) and determine whether it has succeeded or not. After the payout is completed, provided [webhook notifications](webhooks) are set up, Rafiki will also dispatch [payout.state-updated](payoutstate-updated) events &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout States&lt;/summary&gt; &gt; &lt;br&gt; &gt;  &lt;table&gt; &gt;    &lt;thead&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;State&lt;/th&gt; &gt;            &lt;th&gt;Description&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/thead&gt; &gt;    &lt;tbody&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;‚è≥&lt;br&gt;PENDING&lt;/th&gt; &gt;            &lt;th&gt;Your payout has been accepted, and it is currently awaiting processing.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üéâ&lt;br&gt;SENT&lt;/th&gt; &gt;           &lt;th&gt;The payout has been successfully processed, and the intended recipient should have received the funds.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üîô&lt;br&gt;REVERSED&lt;/th&gt; &gt;           &lt;th&gt;Upon reaching the \&quot;SENT\&quot; state, you can request a manual reversal (for instance, if funds were sent to the wrong recipient) by contacting our support team. Please be aware that there is no programmatic API available for this process yet. This state indicates a successful reversal.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üôÖ&lt;br&gt;CANCELLED&lt;/th&gt; &gt;           &lt;th&gt;If the payout has not yet reached the intended recipient, you have the option to request manual cancellation by reaching out to our support team (please note that there is no programmatic API for this yet). This state signifies that the payout has been successfully canceled.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üíî&lt;br&gt;FAILED&lt;/th&gt; &gt;           &lt;th&gt; &gt;               The funds did not reach the intended recipient due to a failure. If the \&quot;context\&quot; property does not provide specific information about the reason for the failure, please contact our customer support for assistance. &gt;           &lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/tbody&gt; &gt;  &lt;/table&gt; &gt;  &lt;/details&gt; &gt; &lt;br&gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout state context&lt;/summary&gt; &gt; &lt;br&gt; &gt; When a payout fails, the \&quot;context\&quot; property of the state object will provide additional information about the reason for the failure. The table below outlines the possible values for this property. &gt; &gt; #### &#x60;WALLET_INSUFFICIENT_BALANCE&#x60; &gt; &gt; The selected wallet currently doesn&#39;t have enough money to process the payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_INVALID_ACCOUNT_NUMBER&#x60; &gt; &gt; The account number provided is invalid. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_BALANCE_MAXED_OUT&#x60; &gt; &gt; The payment account balance has reached the maximum allowed. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_PER_TRANSACTION_LIMIT_REACHED&#x60; &gt; &gt; The amount to be sent exceeds the maximum allowed per transaction for this payment account &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_DAILY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the daily limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_MONTHLY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the monthly limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached a limit but we don&#39;t know which one. &lt;br&gt;&lt;br&gt; &gt; &gt;  &lt;/details&gt;  &gt; ‚ö†Ô∏è Compliance requirements &gt; &gt; Depending on the country and/or bank you plan to disburse money to, there are specific compliance and regulatory requirements that must be adhered to. For example, some countries might necessitate more comprehensive sender details or impose limits on minimum/maximum payout amounts. &gt; &lt;br&gt; &gt; We understand that navigating these varying rules for different countries can be complex, considering the multitude of combinations possible. To simplify this process, you can detail the requirements for each country listed below. &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∞üá™ Kenya&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;140 KES&lt;/td&gt; &gt;                             &lt;td&gt;500,000 KES&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá≥üá¨ Nigeria&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;100 NGN&lt;/td&gt; &gt;                             &lt;td&gt; - &lt;/td&gt; &lt;!- - TODO - -&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üáπüáø Tanzania&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;2,500 TZS&lt;/td&gt; &gt;                             &lt;td&gt;1,000,000 TZS&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∑üáº Rwanda&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;500 RWF&lt;/td&gt; &gt;                             &lt;td&gt;-&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt;
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xIdempotencyKey">üö®Ô∏è Prevent duplicate payouts! See: [x-idempotency-key security scheme](idempotency)</param>
        /// <param name="openapiPayoutCreateRequest">The payout</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PayoutsPost202Response</returns>
        ApiResponse<PayoutsPost202Response> PayoutsPostWithHttpInfo(string xIdempotencyKey, OpenapiPayoutCreateRequest openapiPayoutCreateRequest, int operationIndex = 0);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPayoutApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// List
        /// </summary>
        /// <remarks>
        /// Using this endpoint, you can list all your historical payouts with an optional dates filter. Considering that the returned data may contain thousands of records, the results will be paginated with a cursor [(see pagination docs)](pagination), allowing you to scroll through the data using multiple requests as necessary.     
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createdAtFrom">Filters for payouts created from the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 00:00:00 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="createdAtTo">Filters for payouts created before the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 23:59:59 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="pagingLimit">The count of items returned as part of the pagination cursor iteration, minimum value is 1 and maximum 50 (optional)</param>
        /// <param name="pagingAfter">The base64 URL encoded cursor used to access the next set of paginated results (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PayoutsGet200Response</returns>
        System.Threading.Tasks.Task<PayoutsGet200Response> PayoutsGetAsync(string? createdAtFrom = default(string?), string? createdAtTo = default(string?), int? pagingLimit = default(int?), string? pagingAfter = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// List
        /// </summary>
        /// <remarks>
        /// Using this endpoint, you can list all your historical payouts with an optional dates filter. Considering that the returned data may contain thousands of records, the results will be paginated with a cursor [(see pagination docs)](pagination), allowing you to scroll through the data using multiple requests as necessary.     
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createdAtFrom">Filters for payouts created from the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 00:00:00 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="createdAtTo">Filters for payouts created before the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 23:59:59 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="pagingLimit">The count of items returned as part of the pagination cursor iteration, minimum value is 1 and maximum 50 (optional)</param>
        /// <param name="pagingAfter">The base64 URL encoded cursor used to access the next set of paginated results (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PayoutsGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<PayoutsGet200Response>> PayoutsGetWithHttpInfoAsync(string? createdAtFrom = default(string?), string? createdAtTo = default(string?), int? pagingLimit = default(int?), string? pagingAfter = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Get
        /// </summary>
        /// <remarks>
        /// This endpoint enables the retrieval of a previously accepted payout using its unique ID (&#x60;pyt-xxx&#x60;) or the &#x60;custom_id&#x60; submitted when creating it. Its primary purpose is to periodically check for changes in the payout status.  To learn more about the lifecycle of payouts, please refer to the dedicated section under the [Send Money](post_payouts) endpoint. 
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The Payout ID (pyt-xxx) or the custom_id provided at the time of payout creation</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PayoutsIdGet200Response</returns>
        System.Threading.Tasks.Task<PayoutsIdGet200Response> PayoutsIdGetAsync(string id, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Get
        /// </summary>
        /// <remarks>
        /// This endpoint enables the retrieval of a previously accepted payout using its unique ID (&#x60;pyt-xxx&#x60;) or the &#x60;custom_id&#x60; submitted when creating it. Its primary purpose is to periodically check for changes in the payout status.  To learn more about the lifecycle of payouts, please refer to the dedicated section under the [Send Money](post_payouts) endpoint. 
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The Payout ID (pyt-xxx) or the custom_id provided at the time of payout creation</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PayoutsIdGet200Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<PayoutsIdGet200Response>> PayoutsIdGetWithHttpInfoAsync(string id, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Create
        /// </summary>
        /// <remarks>
        /// The payout resource finds its application in various scenarios where funds need to be disbursed electronically; For example, but not limited to, money remittance services or businesses that need to disburse salaries to their employees.  Regardless of your specific use case, this endpoint has you covered, offering a versatile API to facilitate money disbursement from your [local wallets](get_wallets) to designated recipients (a.k.a [payment accounts](post_payment-accounts)).  &gt; ‚ÑπÔ∏è Lifecycle &gt; &gt; If the request you submit meets our minimum validation standards for processing the payout, our server will accept the request. It will defer the execution to a background asynchronous process, and in response, send you an HTTP 202 status code, along with the payout unique identifier. &gt; &lt;br&gt; &gt; Upon acceptance, the payout is marked as pending. Your client program will need to poll at intervals to [query the payout state](get_payouts-id) and determine whether it has succeeded or not. After the payout is completed, provided [webhook notifications](webhooks) are set up, Rafiki will also dispatch [payout.state-updated](payoutstate-updated) events &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout States&lt;/summary&gt; &gt; &lt;br&gt; &gt;  &lt;table&gt; &gt;    &lt;thead&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;State&lt;/th&gt; &gt;            &lt;th&gt;Description&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/thead&gt; &gt;    &lt;tbody&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;‚è≥&lt;br&gt;PENDING&lt;/th&gt; &gt;            &lt;th&gt;Your payout has been accepted, and it is currently awaiting processing.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üéâ&lt;br&gt;SENT&lt;/th&gt; &gt;           &lt;th&gt;The payout has been successfully processed, and the intended recipient should have received the funds.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üîô&lt;br&gt;REVERSED&lt;/th&gt; &gt;           &lt;th&gt;Upon reaching the \&quot;SENT\&quot; state, you can request a manual reversal (for instance, if funds were sent to the wrong recipient) by contacting our support team. Please be aware that there is no programmatic API available for this process yet. This state indicates a successful reversal.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üôÖ&lt;br&gt;CANCELLED&lt;/th&gt; &gt;           &lt;th&gt;If the payout has not yet reached the intended recipient, you have the option to request manual cancellation by reaching out to our support team (please note that there is no programmatic API for this yet). This state signifies that the payout has been successfully canceled.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üíî&lt;br&gt;FAILED&lt;/th&gt; &gt;           &lt;th&gt; &gt;               The funds did not reach the intended recipient due to a failure. If the \&quot;context\&quot; property does not provide specific information about the reason for the failure, please contact our customer support for assistance. &gt;           &lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/tbody&gt; &gt;  &lt;/table&gt; &gt;  &lt;/details&gt; &gt; &lt;br&gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout state context&lt;/summary&gt; &gt; &lt;br&gt; &gt; When a payout fails, the \&quot;context\&quot; property of the state object will provide additional information about the reason for the failure. The table below outlines the possible values for this property. &gt; &gt; #### &#x60;WALLET_INSUFFICIENT_BALANCE&#x60; &gt; &gt; The selected wallet currently doesn&#39;t have enough money to process the payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_INVALID_ACCOUNT_NUMBER&#x60; &gt; &gt; The account number provided is invalid. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_BALANCE_MAXED_OUT&#x60; &gt; &gt; The payment account balance has reached the maximum allowed. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_PER_TRANSACTION_LIMIT_REACHED&#x60; &gt; &gt; The amount to be sent exceeds the maximum allowed per transaction for this payment account &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_DAILY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the daily limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_MONTHLY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the monthly limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached a limit but we don&#39;t know which one. &lt;br&gt;&lt;br&gt; &gt; &gt;  &lt;/details&gt;  &gt; ‚ö†Ô∏è Compliance requirements &gt; &gt; Depending on the country and/or bank you plan to disburse money to, there are specific compliance and regulatory requirements that must be adhered to. For example, some countries might necessitate more comprehensive sender details or impose limits on minimum/maximum payout amounts. &gt; &lt;br&gt; &gt; We understand that navigating these varying rules for different countries can be complex, considering the multitude of combinations possible. To simplify this process, you can detail the requirements for each country listed below. &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∞üá™ Kenya&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;140 KES&lt;/td&gt; &gt;                             &lt;td&gt;500,000 KES&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá≥üá¨ Nigeria&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;100 NGN&lt;/td&gt; &gt;                             &lt;td&gt; - &lt;/td&gt; &lt;!- - TODO - -&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üáπüáø Tanzania&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;2,500 TZS&lt;/td&gt; &gt;                             &lt;td&gt;1,000,000 TZS&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∑üáº Rwanda&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;500 RWF&lt;/td&gt; &gt;                             &lt;td&gt;-&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt;
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xIdempotencyKey">üö®Ô∏è Prevent duplicate payouts! See: [x-idempotency-key security scheme](idempotency)</param>
        /// <param name="openapiPayoutCreateRequest">The payout</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PayoutsPost202Response</returns>
        System.Threading.Tasks.Task<PayoutsPost202Response> PayoutsPostAsync(string xIdempotencyKey, OpenapiPayoutCreateRequest openapiPayoutCreateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Create
        /// </summary>
        /// <remarks>
        /// The payout resource finds its application in various scenarios where funds need to be disbursed electronically; For example, but not limited to, money remittance services or businesses that need to disburse salaries to their employees.  Regardless of your specific use case, this endpoint has you covered, offering a versatile API to facilitate money disbursement from your [local wallets](get_wallets) to designated recipients (a.k.a [payment accounts](post_payment-accounts)).  &gt; ‚ÑπÔ∏è Lifecycle &gt; &gt; If the request you submit meets our minimum validation standards for processing the payout, our server will accept the request. It will defer the execution to a background asynchronous process, and in response, send you an HTTP 202 status code, along with the payout unique identifier. &gt; &lt;br&gt; &gt; Upon acceptance, the payout is marked as pending. Your client program will need to poll at intervals to [query the payout state](get_payouts-id) and determine whether it has succeeded or not. After the payout is completed, provided [webhook notifications](webhooks) are set up, Rafiki will also dispatch [payout.state-updated](payoutstate-updated) events &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout States&lt;/summary&gt; &gt; &lt;br&gt; &gt;  &lt;table&gt; &gt;    &lt;thead&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;State&lt;/th&gt; &gt;            &lt;th&gt;Description&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/thead&gt; &gt;    &lt;tbody&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;‚è≥&lt;br&gt;PENDING&lt;/th&gt; &gt;            &lt;th&gt;Your payout has been accepted, and it is currently awaiting processing.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üéâ&lt;br&gt;SENT&lt;/th&gt; &gt;           &lt;th&gt;The payout has been successfully processed, and the intended recipient should have received the funds.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üîô&lt;br&gt;REVERSED&lt;/th&gt; &gt;           &lt;th&gt;Upon reaching the \&quot;SENT\&quot; state, you can request a manual reversal (for instance, if funds were sent to the wrong recipient) by contacting our support team. Please be aware that there is no programmatic API available for this process yet. This state indicates a successful reversal.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üôÖ&lt;br&gt;CANCELLED&lt;/th&gt; &gt;           &lt;th&gt;If the payout has not yet reached the intended recipient, you have the option to request manual cancellation by reaching out to our support team (please note that there is no programmatic API for this yet). This state signifies that the payout has been successfully canceled.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üíî&lt;br&gt;FAILED&lt;/th&gt; &gt;           &lt;th&gt; &gt;               The funds did not reach the intended recipient due to a failure. If the \&quot;context\&quot; property does not provide specific information about the reason for the failure, please contact our customer support for assistance. &gt;           &lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/tbody&gt; &gt;  &lt;/table&gt; &gt;  &lt;/details&gt; &gt; &lt;br&gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout state context&lt;/summary&gt; &gt; &lt;br&gt; &gt; When a payout fails, the \&quot;context\&quot; property of the state object will provide additional information about the reason for the failure. The table below outlines the possible values for this property. &gt; &gt; #### &#x60;WALLET_INSUFFICIENT_BALANCE&#x60; &gt; &gt; The selected wallet currently doesn&#39;t have enough money to process the payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_INVALID_ACCOUNT_NUMBER&#x60; &gt; &gt; The account number provided is invalid. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_BALANCE_MAXED_OUT&#x60; &gt; &gt; The payment account balance has reached the maximum allowed. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_PER_TRANSACTION_LIMIT_REACHED&#x60; &gt; &gt; The amount to be sent exceeds the maximum allowed per transaction for this payment account &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_DAILY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the daily limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_MONTHLY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the monthly limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached a limit but we don&#39;t know which one. &lt;br&gt;&lt;br&gt; &gt; &gt;  &lt;/details&gt;  &gt; ‚ö†Ô∏è Compliance requirements &gt; &gt; Depending on the country and/or bank you plan to disburse money to, there are specific compliance and regulatory requirements that must be adhered to. For example, some countries might necessitate more comprehensive sender details or impose limits on minimum/maximum payout amounts. &gt; &lt;br&gt; &gt; We understand that navigating these varying rules for different countries can be complex, considering the multitude of combinations possible. To simplify this process, you can detail the requirements for each country listed below. &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∞üá™ Kenya&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;140 KES&lt;/td&gt; &gt;                             &lt;td&gt;500,000 KES&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá≥üá¨ Nigeria&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;100 NGN&lt;/td&gt; &gt;                             &lt;td&gt; - &lt;/td&gt; &lt;!- - TODO - -&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üáπüáø Tanzania&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;2,500 TZS&lt;/td&gt; &gt;                             &lt;td&gt;1,000,000 TZS&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∑üáº Rwanda&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;500 RWF&lt;/td&gt; &gt;                             &lt;td&gt;-&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt;
        /// </remarks>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xIdempotencyKey">üö®Ô∏è Prevent duplicate payouts! See: [x-idempotency-key security scheme](idempotency)</param>
        /// <param name="openapiPayoutCreateRequest">The payout</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PayoutsPost202Response)</returns>
        System.Threading.Tasks.Task<ApiResponse<PayoutsPost202Response>> PayoutsPostWithHttpInfoAsync(string xIdempotencyKey, OpenapiPayoutCreateRequest openapiPayoutCreateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface IPayoutApi : IPayoutApiSync, IPayoutApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class PayoutApi : IPayoutApi
    {
        private rafikigen.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="PayoutApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PayoutApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PayoutApi"/> class.
        /// </summary>
        /// <returns></returns>
        public PayoutApi(string basePath)
        {
            this.Configuration = rafikigen.Client.Configuration.MergeConfigurations(
                rafikigen.Client.GlobalConfiguration.Instance,
                new rafikigen.Client.Configuration { BasePath = basePath }
            );
            this.Client = new rafikigen.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new rafikigen.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = rafikigen.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PayoutApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public PayoutApi(rafikigen.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = rafikigen.Client.Configuration.MergeConfigurations(
                rafikigen.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new rafikigen.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new rafikigen.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = rafikigen.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PayoutApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public PayoutApi(rafikigen.Client.ISynchronousClient client, rafikigen.Client.IAsynchronousClient asyncClient, rafikigen.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = rafikigen.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public rafikigen.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public rafikigen.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public rafikigen.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public rafikigen.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// List Using this endpoint, you can list all your historical payouts with an optional dates filter. Considering that the returned data may contain thousands of records, the results will be paginated with a cursor [(see pagination docs)](pagination), allowing you to scroll through the data using multiple requests as necessary.     
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createdAtFrom">Filters for payouts created from the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 00:00:00 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="createdAtTo">Filters for payouts created before the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 23:59:59 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="pagingLimit">The count of items returned as part of the pagination cursor iteration, minimum value is 1 and maximum 50 (optional)</param>
        /// <param name="pagingAfter">The base64 URL encoded cursor used to access the next set of paginated results (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PayoutsGet200Response</returns>
        public PayoutsGet200Response PayoutsGet(string? createdAtFrom = default(string?), string? createdAtTo = default(string?), int? pagingLimit = default(int?), string? pagingAfter = default(string?), int operationIndex = 0)
        {
            rafikigen.Client.ApiResponse<PayoutsGet200Response> localVarResponse = PayoutsGetWithHttpInfo(createdAtFrom, createdAtTo, pagingLimit, pagingAfter);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List Using this endpoint, you can list all your historical payouts with an optional dates filter. Considering that the returned data may contain thousands of records, the results will be paginated with a cursor [(see pagination docs)](pagination), allowing you to scroll through the data using multiple requests as necessary.     
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createdAtFrom">Filters for payouts created from the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 00:00:00 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="createdAtTo">Filters for payouts created before the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 23:59:59 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="pagingLimit">The count of items returned as part of the pagination cursor iteration, minimum value is 1 and maximum 50 (optional)</param>
        /// <param name="pagingAfter">The base64 URL encoded cursor used to access the next set of paginated results (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PayoutsGet200Response</returns>
        public rafikigen.Client.ApiResponse<PayoutsGet200Response> PayoutsGetWithHttpInfo(string? createdAtFrom = default(string?), string? createdAtTo = default(string?), int? pagingLimit = default(int?), string? pagingAfter = default(string?), int operationIndex = 0)
        {
            rafikigen.Client.RequestOptions localVarRequestOptions = new rafikigen.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = rafikigen.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = rafikigen.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (createdAtFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(rafikigen.Client.ClientUtils.ParameterToMultiMap("", "created_at_from", createdAtFrom));
            }
            if (createdAtTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(rafikigen.Client.ClientUtils.ParameterToMultiMap("", "created_at_to", createdAtTo));
            }
            if (pagingLimit != null)
            {
                localVarRequestOptions.QueryParameters.Add(rafikigen.Client.ClientUtils.ParameterToMultiMap("", "paging_limit", pagingLimit));
            }
            if (pagingAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(rafikigen.Client.ClientUtils.ParameterToMultiMap("", "paging_after", pagingAfter));
            }

            localVarRequestOptions.Operation = "PayoutApi.PayoutsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PayoutsGet200Response>("/payouts", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PayoutsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// List Using this endpoint, you can list all your historical payouts with an optional dates filter. Considering that the returned data may contain thousands of records, the results will be paginated with a cursor [(see pagination docs)](pagination), allowing you to scroll through the data using multiple requests as necessary.     
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createdAtFrom">Filters for payouts created from the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 00:00:00 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="createdAtTo">Filters for payouts created before the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 23:59:59 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="pagingLimit">The count of items returned as part of the pagination cursor iteration, minimum value is 1 and maximum 50 (optional)</param>
        /// <param name="pagingAfter">The base64 URL encoded cursor used to access the next set of paginated results (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PayoutsGet200Response</returns>
        public async System.Threading.Tasks.Task<PayoutsGet200Response> PayoutsGetAsync(string? createdAtFrom = default(string?), string? createdAtTo = default(string?), int? pagingLimit = default(int?), string? pagingAfter = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            rafikigen.Client.ApiResponse<PayoutsGet200Response> localVarResponse = await PayoutsGetWithHttpInfoAsync(createdAtFrom, createdAtTo, pagingLimit, pagingAfter, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// List Using this endpoint, you can list all your historical payouts with an optional dates filter. Considering that the returned data may contain thousands of records, the results will be paginated with a cursor [(see pagination docs)](pagination), allowing you to scroll through the data using multiple requests as necessary.     
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="createdAtFrom">Filters for payouts created from the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 00:00:00 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="createdAtTo">Filters for payouts created before the specified datetime. The expected format can be either a standard date (YYYY-MM-DD) that defaults to 23:59:59 UTC or a valid RFC3339 string, including time and/or offset information. (optional)</param>
        /// <param name="pagingLimit">The count of items returned as part of the pagination cursor iteration, minimum value is 1 and maximum 50 (optional)</param>
        /// <param name="pagingAfter">The base64 URL encoded cursor used to access the next set of paginated results (optional)</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PayoutsGet200Response)</returns>
        public async System.Threading.Tasks.Task<rafikigen.Client.ApiResponse<PayoutsGet200Response>> PayoutsGetWithHttpInfoAsync(string? createdAtFrom = default(string?), string? createdAtTo = default(string?), int? pagingLimit = default(int?), string? pagingAfter = default(string?), int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            rafikigen.Client.RequestOptions localVarRequestOptions = new rafikigen.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = rafikigen.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = rafikigen.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (createdAtFrom != null)
            {
                localVarRequestOptions.QueryParameters.Add(rafikigen.Client.ClientUtils.ParameterToMultiMap("", "created_at_from", createdAtFrom));
            }
            if (createdAtTo != null)
            {
                localVarRequestOptions.QueryParameters.Add(rafikigen.Client.ClientUtils.ParameterToMultiMap("", "created_at_to", createdAtTo));
            }
            if (pagingLimit != null)
            {
                localVarRequestOptions.QueryParameters.Add(rafikigen.Client.ClientUtils.ParameterToMultiMap("", "paging_limit", pagingLimit));
            }
            if (pagingAfter != null)
            {
                localVarRequestOptions.QueryParameters.Add(rafikigen.Client.ClientUtils.ParameterToMultiMap("", "paging_after", pagingAfter));
            }

            localVarRequestOptions.Operation = "PayoutApi.PayoutsGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PayoutsGet200Response>("/payouts", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PayoutsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get This endpoint enables the retrieval of a previously accepted payout using its unique ID (&#x60;pyt-xxx&#x60;) or the &#x60;custom_id&#x60; submitted when creating it. Its primary purpose is to periodically check for changes in the payout status.  To learn more about the lifecycle of payouts, please refer to the dedicated section under the [Send Money](post_payouts) endpoint. 
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The Payout ID (pyt-xxx) or the custom_id provided at the time of payout creation</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PayoutsIdGet200Response</returns>
        public PayoutsIdGet200Response PayoutsIdGet(string id, int operationIndex = 0)
        {
            rafikigen.Client.ApiResponse<PayoutsIdGet200Response> localVarResponse = PayoutsIdGetWithHttpInfo(id);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get This endpoint enables the retrieval of a previously accepted payout using its unique ID (&#x60;pyt-xxx&#x60;) or the &#x60;custom_id&#x60; submitted when creating it. Its primary purpose is to periodically check for changes in the payout status.  To learn more about the lifecycle of payouts, please refer to the dedicated section under the [Send Money](post_payouts) endpoint. 
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The Payout ID (pyt-xxx) or the custom_id provided at the time of payout creation</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PayoutsIdGet200Response</returns>
        public rafikigen.Client.ApiResponse<PayoutsIdGet200Response> PayoutsIdGetWithHttpInfo(string id, int operationIndex = 0)
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new rafikigen.Client.ApiException(400, "Missing required parameter 'id' when calling PayoutApi->PayoutsIdGet");
            }

            rafikigen.Client.RequestOptions localVarRequestOptions = new rafikigen.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = rafikigen.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = rafikigen.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", rafikigen.Client.ClientUtils.ParameterToString(id)); // path parameter

            localVarRequestOptions.Operation = "PayoutApi.PayoutsIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<PayoutsIdGet200Response>("/payouts/{id}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PayoutsIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Get This endpoint enables the retrieval of a previously accepted payout using its unique ID (&#x60;pyt-xxx&#x60;) or the &#x60;custom_id&#x60; submitted when creating it. Its primary purpose is to periodically check for changes in the payout status.  To learn more about the lifecycle of payouts, please refer to the dedicated section under the [Send Money](post_payouts) endpoint. 
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The Payout ID (pyt-xxx) or the custom_id provided at the time of payout creation</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PayoutsIdGet200Response</returns>
        public async System.Threading.Tasks.Task<PayoutsIdGet200Response> PayoutsIdGetAsync(string id, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            rafikigen.Client.ApiResponse<PayoutsIdGet200Response> localVarResponse = await PayoutsIdGetWithHttpInfoAsync(id, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Get This endpoint enables the retrieval of a previously accepted payout using its unique ID (&#x60;pyt-xxx&#x60;) or the &#x60;custom_id&#x60; submitted when creating it. Its primary purpose is to periodically check for changes in the payout status.  To learn more about the lifecycle of payouts, please refer to the dedicated section under the [Send Money](post_payouts) endpoint. 
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="id">The Payout ID (pyt-xxx) or the custom_id provided at the time of payout creation</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PayoutsIdGet200Response)</returns>
        public async System.Threading.Tasks.Task<rafikigen.Client.ApiResponse<PayoutsIdGet200Response>> PayoutsIdGetWithHttpInfoAsync(string id, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'id' is set
            if (id == null)
            {
                throw new rafikigen.Client.ApiException(400, "Missing required parameter 'id' when calling PayoutApi->PayoutsIdGet");
            }


            rafikigen.Client.RequestOptions localVarRequestOptions = new rafikigen.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = rafikigen.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = rafikigen.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("id", rafikigen.Client.ClientUtils.ParameterToString(id)); // path parameter

            localVarRequestOptions.Operation = "PayoutApi.PayoutsIdGet";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<PayoutsIdGet200Response>("/payouts/{id}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PayoutsIdGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create The payout resource finds its application in various scenarios where funds need to be disbursed electronically; For example, but not limited to, money remittance services or businesses that need to disburse salaries to their employees.  Regardless of your specific use case, this endpoint has you covered, offering a versatile API to facilitate money disbursement from your [local wallets](get_wallets) to designated recipients (a.k.a [payment accounts](post_payment-accounts)).  &gt; ‚ÑπÔ∏è Lifecycle &gt; &gt; If the request you submit meets our minimum validation standards for processing the payout, our server will accept the request. It will defer the execution to a background asynchronous process, and in response, send you an HTTP 202 status code, along with the payout unique identifier. &gt; &lt;br&gt; &gt; Upon acceptance, the payout is marked as pending. Your client program will need to poll at intervals to [query the payout state](get_payouts-id) and determine whether it has succeeded or not. After the payout is completed, provided [webhook notifications](webhooks) are set up, Rafiki will also dispatch [payout.state-updated](payoutstate-updated) events &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout States&lt;/summary&gt; &gt; &lt;br&gt; &gt;  &lt;table&gt; &gt;    &lt;thead&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;State&lt;/th&gt; &gt;            &lt;th&gt;Description&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/thead&gt; &gt;    &lt;tbody&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;‚è≥&lt;br&gt;PENDING&lt;/th&gt; &gt;            &lt;th&gt;Your payout has been accepted, and it is currently awaiting processing.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üéâ&lt;br&gt;SENT&lt;/th&gt; &gt;           &lt;th&gt;The payout has been successfully processed, and the intended recipient should have received the funds.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üîô&lt;br&gt;REVERSED&lt;/th&gt; &gt;           &lt;th&gt;Upon reaching the \&quot;SENT\&quot; state, you can request a manual reversal (for instance, if funds were sent to the wrong recipient) by contacting our support team. Please be aware that there is no programmatic API available for this process yet. This state indicates a successful reversal.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üôÖ&lt;br&gt;CANCELLED&lt;/th&gt; &gt;           &lt;th&gt;If the payout has not yet reached the intended recipient, you have the option to request manual cancellation by reaching out to our support team (please note that there is no programmatic API for this yet). This state signifies that the payout has been successfully canceled.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üíî&lt;br&gt;FAILED&lt;/th&gt; &gt;           &lt;th&gt; &gt;               The funds did not reach the intended recipient due to a failure. If the \&quot;context\&quot; property does not provide specific information about the reason for the failure, please contact our customer support for assistance. &gt;           &lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/tbody&gt; &gt;  &lt;/table&gt; &gt;  &lt;/details&gt; &gt; &lt;br&gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout state context&lt;/summary&gt; &gt; &lt;br&gt; &gt; When a payout fails, the \&quot;context\&quot; property of the state object will provide additional information about the reason for the failure. The table below outlines the possible values for this property. &gt; &gt; #### &#x60;WALLET_INSUFFICIENT_BALANCE&#x60; &gt; &gt; The selected wallet currently doesn&#39;t have enough money to process the payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_INVALID_ACCOUNT_NUMBER&#x60; &gt; &gt; The account number provided is invalid. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_BALANCE_MAXED_OUT&#x60; &gt; &gt; The payment account balance has reached the maximum allowed. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_PER_TRANSACTION_LIMIT_REACHED&#x60; &gt; &gt; The amount to be sent exceeds the maximum allowed per transaction for this payment account &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_DAILY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the daily limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_MONTHLY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the monthly limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached a limit but we don&#39;t know which one. &lt;br&gt;&lt;br&gt; &gt; &gt;  &lt;/details&gt;  &gt; ‚ö†Ô∏è Compliance requirements &gt; &gt; Depending on the country and/or bank you plan to disburse money to, there are specific compliance and regulatory requirements that must be adhered to. For example, some countries might necessitate more comprehensive sender details or impose limits on minimum/maximum payout amounts. &gt; &lt;br&gt; &gt; We understand that navigating these varying rules for different countries can be complex, considering the multitude of combinations possible. To simplify this process, you can detail the requirements for each country listed below. &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∞üá™ Kenya&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;140 KES&lt;/td&gt; &gt;                             &lt;td&gt;500,000 KES&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá≥üá¨ Nigeria&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;100 NGN&lt;/td&gt; &gt;                             &lt;td&gt; - &lt;/td&gt; &lt;!- - TODO - -&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üáπüáø Tanzania&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;2,500 TZS&lt;/td&gt; &gt;                             &lt;td&gt;1,000,000 TZS&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∑üáº Rwanda&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;500 RWF&lt;/td&gt; &gt;                             &lt;td&gt;-&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt;
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xIdempotencyKey">üö®Ô∏è Prevent duplicate payouts! See: [x-idempotency-key security scheme](idempotency)</param>
        /// <param name="openapiPayoutCreateRequest">The payout</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>PayoutsPost202Response</returns>
        public PayoutsPost202Response PayoutsPost(string xIdempotencyKey, OpenapiPayoutCreateRequest openapiPayoutCreateRequest, int operationIndex = 0)
        {
            rafikigen.Client.ApiResponse<PayoutsPost202Response> localVarResponse = PayoutsPostWithHttpInfo(xIdempotencyKey, openapiPayoutCreateRequest);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create The payout resource finds its application in various scenarios where funds need to be disbursed electronically; For example, but not limited to, money remittance services or businesses that need to disburse salaries to their employees.  Regardless of your specific use case, this endpoint has you covered, offering a versatile API to facilitate money disbursement from your [local wallets](get_wallets) to designated recipients (a.k.a [payment accounts](post_payment-accounts)).  &gt; ‚ÑπÔ∏è Lifecycle &gt; &gt; If the request you submit meets our minimum validation standards for processing the payout, our server will accept the request. It will defer the execution to a background asynchronous process, and in response, send you an HTTP 202 status code, along with the payout unique identifier. &gt; &lt;br&gt; &gt; Upon acceptance, the payout is marked as pending. Your client program will need to poll at intervals to [query the payout state](get_payouts-id) and determine whether it has succeeded or not. After the payout is completed, provided [webhook notifications](webhooks) are set up, Rafiki will also dispatch [payout.state-updated](payoutstate-updated) events &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout States&lt;/summary&gt; &gt; &lt;br&gt; &gt;  &lt;table&gt; &gt;    &lt;thead&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;State&lt;/th&gt; &gt;            &lt;th&gt;Description&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/thead&gt; &gt;    &lt;tbody&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;‚è≥&lt;br&gt;PENDING&lt;/th&gt; &gt;            &lt;th&gt;Your payout has been accepted, and it is currently awaiting processing.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üéâ&lt;br&gt;SENT&lt;/th&gt; &gt;           &lt;th&gt;The payout has been successfully processed, and the intended recipient should have received the funds.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üîô&lt;br&gt;REVERSED&lt;/th&gt; &gt;           &lt;th&gt;Upon reaching the \&quot;SENT\&quot; state, you can request a manual reversal (for instance, if funds were sent to the wrong recipient) by contacting our support team. Please be aware that there is no programmatic API available for this process yet. This state indicates a successful reversal.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üôÖ&lt;br&gt;CANCELLED&lt;/th&gt; &gt;           &lt;th&gt;If the payout has not yet reached the intended recipient, you have the option to request manual cancellation by reaching out to our support team (please note that there is no programmatic API for this yet). This state signifies that the payout has been successfully canceled.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üíî&lt;br&gt;FAILED&lt;/th&gt; &gt;           &lt;th&gt; &gt;               The funds did not reach the intended recipient due to a failure. If the \&quot;context\&quot; property does not provide specific information about the reason for the failure, please contact our customer support for assistance. &gt;           &lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/tbody&gt; &gt;  &lt;/table&gt; &gt;  &lt;/details&gt; &gt; &lt;br&gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout state context&lt;/summary&gt; &gt; &lt;br&gt; &gt; When a payout fails, the \&quot;context\&quot; property of the state object will provide additional information about the reason for the failure. The table below outlines the possible values for this property. &gt; &gt; #### &#x60;WALLET_INSUFFICIENT_BALANCE&#x60; &gt; &gt; The selected wallet currently doesn&#39;t have enough money to process the payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_INVALID_ACCOUNT_NUMBER&#x60; &gt; &gt; The account number provided is invalid. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_BALANCE_MAXED_OUT&#x60; &gt; &gt; The payment account balance has reached the maximum allowed. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_PER_TRANSACTION_LIMIT_REACHED&#x60; &gt; &gt; The amount to be sent exceeds the maximum allowed per transaction for this payment account &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_DAILY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the daily limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_MONTHLY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the monthly limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached a limit but we don&#39;t know which one. &lt;br&gt;&lt;br&gt; &gt; &gt;  &lt;/details&gt;  &gt; ‚ö†Ô∏è Compliance requirements &gt; &gt; Depending on the country and/or bank you plan to disburse money to, there are specific compliance and regulatory requirements that must be adhered to. For example, some countries might necessitate more comprehensive sender details or impose limits on minimum/maximum payout amounts. &gt; &lt;br&gt; &gt; We understand that navigating these varying rules for different countries can be complex, considering the multitude of combinations possible. To simplify this process, you can detail the requirements for each country listed below. &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∞üá™ Kenya&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;140 KES&lt;/td&gt; &gt;                             &lt;td&gt;500,000 KES&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá≥üá¨ Nigeria&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;100 NGN&lt;/td&gt; &gt;                             &lt;td&gt; - &lt;/td&gt; &lt;!- - TODO - -&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üáπüáø Tanzania&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;2,500 TZS&lt;/td&gt; &gt;                             &lt;td&gt;1,000,000 TZS&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∑üáº Rwanda&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;500 RWF&lt;/td&gt; &gt;                             &lt;td&gt;-&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt;
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xIdempotencyKey">üö®Ô∏è Prevent duplicate payouts! See: [x-idempotency-key security scheme](idempotency)</param>
        /// <param name="openapiPayoutCreateRequest">The payout</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <returns>ApiResponse of PayoutsPost202Response</returns>
        public rafikigen.Client.ApiResponse<PayoutsPost202Response> PayoutsPostWithHttpInfo(string xIdempotencyKey, OpenapiPayoutCreateRequest openapiPayoutCreateRequest, int operationIndex = 0)
        {
            // verify the required parameter 'xIdempotencyKey' is set
            if (xIdempotencyKey == null)
            {
                throw new rafikigen.Client.ApiException(400, "Missing required parameter 'xIdempotencyKey' when calling PayoutApi->PayoutsPost");
            }

            // verify the required parameter 'openapiPayoutCreateRequest' is set
            if (openapiPayoutCreateRequest == null)
            {
                throw new rafikigen.Client.ApiException(400, "Missing required parameter 'openapiPayoutCreateRequest' when calling PayoutApi->PayoutsPost");
            }

            rafikigen.Client.RequestOptions localVarRequestOptions = new rafikigen.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = rafikigen.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = rafikigen.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("X-Idempotency-Key", rafikigen.Client.ClientUtils.ParameterToString(xIdempotencyKey)); // header parameter
            localVarRequestOptions.Data = openapiPayoutCreateRequest;

            localVarRequestOptions.Operation = "PayoutApi.PayoutsPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<PayoutsPost202Response>("/payouts", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PayoutsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Create The payout resource finds its application in various scenarios where funds need to be disbursed electronically; For example, but not limited to, money remittance services or businesses that need to disburse salaries to their employees.  Regardless of your specific use case, this endpoint has you covered, offering a versatile API to facilitate money disbursement from your [local wallets](get_wallets) to designated recipients (a.k.a [payment accounts](post_payment-accounts)).  &gt; ‚ÑπÔ∏è Lifecycle &gt; &gt; If the request you submit meets our minimum validation standards for processing the payout, our server will accept the request. It will defer the execution to a background asynchronous process, and in response, send you an HTTP 202 status code, along with the payout unique identifier. &gt; &lt;br&gt; &gt; Upon acceptance, the payout is marked as pending. Your client program will need to poll at intervals to [query the payout state](get_payouts-id) and determine whether it has succeeded or not. After the payout is completed, provided [webhook notifications](webhooks) are set up, Rafiki will also dispatch [payout.state-updated](payoutstate-updated) events &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout States&lt;/summary&gt; &gt; &lt;br&gt; &gt;  &lt;table&gt; &gt;    &lt;thead&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;State&lt;/th&gt; &gt;            &lt;th&gt;Description&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/thead&gt; &gt;    &lt;tbody&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;‚è≥&lt;br&gt;PENDING&lt;/th&gt; &gt;            &lt;th&gt;Your payout has been accepted, and it is currently awaiting processing.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üéâ&lt;br&gt;SENT&lt;/th&gt; &gt;           &lt;th&gt;The payout has been successfully processed, and the intended recipient should have received the funds.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üîô&lt;br&gt;REVERSED&lt;/th&gt; &gt;           &lt;th&gt;Upon reaching the \&quot;SENT\&quot; state, you can request a manual reversal (for instance, if funds were sent to the wrong recipient) by contacting our support team. Please be aware that there is no programmatic API available for this process yet. This state indicates a successful reversal.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üôÖ&lt;br&gt;CANCELLED&lt;/th&gt; &gt;           &lt;th&gt;If the payout has not yet reached the intended recipient, you have the option to request manual cancellation by reaching out to our support team (please note that there is no programmatic API for this yet). This state signifies that the payout has been successfully canceled.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üíî&lt;br&gt;FAILED&lt;/th&gt; &gt;           &lt;th&gt; &gt;               The funds did not reach the intended recipient due to a failure. If the \&quot;context\&quot; property does not provide specific information about the reason for the failure, please contact our customer support for assistance. &gt;           &lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/tbody&gt; &gt;  &lt;/table&gt; &gt;  &lt;/details&gt; &gt; &lt;br&gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout state context&lt;/summary&gt; &gt; &lt;br&gt; &gt; When a payout fails, the \&quot;context\&quot; property of the state object will provide additional information about the reason for the failure. The table below outlines the possible values for this property. &gt; &gt; #### &#x60;WALLET_INSUFFICIENT_BALANCE&#x60; &gt; &gt; The selected wallet currently doesn&#39;t have enough money to process the payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_INVALID_ACCOUNT_NUMBER&#x60; &gt; &gt; The account number provided is invalid. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_BALANCE_MAXED_OUT&#x60; &gt; &gt; The payment account balance has reached the maximum allowed. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_PER_TRANSACTION_LIMIT_REACHED&#x60; &gt; &gt; The amount to be sent exceeds the maximum allowed per transaction for this payment account &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_DAILY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the daily limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_MONTHLY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the monthly limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached a limit but we don&#39;t know which one. &lt;br&gt;&lt;br&gt; &gt; &gt;  &lt;/details&gt;  &gt; ‚ö†Ô∏è Compliance requirements &gt; &gt; Depending on the country and/or bank you plan to disburse money to, there are specific compliance and regulatory requirements that must be adhered to. For example, some countries might necessitate more comprehensive sender details or impose limits on minimum/maximum payout amounts. &gt; &lt;br&gt; &gt; We understand that navigating these varying rules for different countries can be complex, considering the multitude of combinations possible. To simplify this process, you can detail the requirements for each country listed below. &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∞üá™ Kenya&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;140 KES&lt;/td&gt; &gt;                             &lt;td&gt;500,000 KES&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá≥üá¨ Nigeria&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;100 NGN&lt;/td&gt; &gt;                             &lt;td&gt; - &lt;/td&gt; &lt;!- - TODO - -&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üáπüáø Tanzania&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;2,500 TZS&lt;/td&gt; &gt;                             &lt;td&gt;1,000,000 TZS&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∑üáº Rwanda&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;500 RWF&lt;/td&gt; &gt;                             &lt;td&gt;-&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt;
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xIdempotencyKey">üö®Ô∏è Prevent duplicate payouts! See: [x-idempotency-key security scheme](idempotency)</param>
        /// <param name="openapiPayoutCreateRequest">The payout</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of PayoutsPost202Response</returns>
        public async System.Threading.Tasks.Task<PayoutsPost202Response> PayoutsPostAsync(string xIdempotencyKey, OpenapiPayoutCreateRequest openapiPayoutCreateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            rafikigen.Client.ApiResponse<PayoutsPost202Response> localVarResponse = await PayoutsPostWithHttpInfoAsync(xIdempotencyKey, openapiPayoutCreateRequest, operationIndex, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Create The payout resource finds its application in various scenarios where funds need to be disbursed electronically; For example, but not limited to, money remittance services or businesses that need to disburse salaries to their employees.  Regardless of your specific use case, this endpoint has you covered, offering a versatile API to facilitate money disbursement from your [local wallets](get_wallets) to designated recipients (a.k.a [payment accounts](post_payment-accounts)).  &gt; ‚ÑπÔ∏è Lifecycle &gt; &gt; If the request you submit meets our minimum validation standards for processing the payout, our server will accept the request. It will defer the execution to a background asynchronous process, and in response, send you an HTTP 202 status code, along with the payout unique identifier. &gt; &lt;br&gt; &gt; Upon acceptance, the payout is marked as pending. Your client program will need to poll at intervals to [query the payout state](get_payouts-id) and determine whether it has succeeded or not. After the payout is completed, provided [webhook notifications](webhooks) are set up, Rafiki will also dispatch [payout.state-updated](payoutstate-updated) events &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout States&lt;/summary&gt; &gt; &lt;br&gt; &gt;  &lt;table&gt; &gt;    &lt;thead&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;State&lt;/th&gt; &gt;            &lt;th&gt;Description&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/thead&gt; &gt;    &lt;tbody&gt; &gt;        &lt;tr&gt; &gt;            &lt;th&gt;‚è≥&lt;br&gt;PENDING&lt;/th&gt; &gt;            &lt;th&gt;Your payout has been accepted, and it is currently awaiting processing.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üéâ&lt;br&gt;SENT&lt;/th&gt; &gt;           &lt;th&gt;The payout has been successfully processed, and the intended recipient should have received the funds.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üîô&lt;br&gt;REVERSED&lt;/th&gt; &gt;           &lt;th&gt;Upon reaching the \&quot;SENT\&quot; state, you can request a manual reversal (for instance, if funds were sent to the wrong recipient) by contacting our support team. Please be aware that there is no programmatic API available for this process yet. This state indicates a successful reversal.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üôÖ&lt;br&gt;CANCELLED&lt;/th&gt; &gt;           &lt;th&gt;If the payout has not yet reached the intended recipient, you have the option to request manual cancellation by reaching out to our support team (please note that there is no programmatic API for this yet). This state signifies that the payout has been successfully canceled.&lt;/th&gt; &gt;        &lt;/tr&gt; &gt;        &lt;tr&gt; &gt;           &lt;th&gt;üíî&lt;br&gt;FAILED&lt;/th&gt; &gt;           &lt;th&gt; &gt;               The funds did not reach the intended recipient due to a failure. If the \&quot;context\&quot; property does not provide specific information about the reason for the failure, please contact our customer support for assistance. &gt;           &lt;/th&gt; &gt;        &lt;/tr&gt; &gt;    &lt;/tbody&gt; &gt;  &lt;/table&gt; &gt;  &lt;/details&gt; &gt; &lt;br&gt; &gt; &lt;details&gt; &gt;  &lt;summary&gt;Payout state context&lt;/summary&gt; &gt; &lt;br&gt; &gt; When a payout fails, the \&quot;context\&quot; property of the state object will provide additional information about the reason for the failure. The table below outlines the possible values for this property. &gt; &gt; #### &#x60;WALLET_INSUFFICIENT_BALANCE&#x60; &gt; &gt; The selected wallet currently doesn&#39;t have enough money to process the payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_INVALID_ACCOUNT_NUMBER&#x60; &gt; &gt; The account number provided is invalid. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_BALANCE_MAXED_OUT&#x60; &gt; &gt; The payment account balance has reached the maximum allowed. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_PER_TRANSACTION_LIMIT_REACHED&#x60; &gt; &gt; The amount to be sent exceeds the maximum allowed per transaction for this payment account &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_DAILY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the daily limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_MONTHLY_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached the monthly limit or would reach it by processing this payout. &lt;br&gt;&lt;br&gt; &gt; &gt; #### &#x60;PAYMENT_ACCOUNT_LIMIT_REACHED&#x60; &gt; &gt; The payment account has reached a limit but we don&#39;t know which one. &lt;br&gt;&lt;br&gt; &gt; &gt;  &lt;/details&gt;  &gt; ‚ö†Ô∏è Compliance requirements &gt; &gt; Depending on the country and/or bank you plan to disburse money to, there are specific compliance and regulatory requirements that must be adhered to. For example, some countries might necessitate more comprehensive sender details or impose limits on minimum/maximum payout amounts. &gt; &lt;br&gt; &gt; We understand that navigating these varying rules for different countries can be complex, considering the multitude of combinations possible. To simplify this process, you can detail the requirements for each country listed below. &gt; &lt;br&gt; &gt; &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∞üá™ Kenya&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;140 KES&lt;/td&gt; &gt;                             &lt;td&gt;500,000 KES&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Kenya - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá≥üá¨ Nigeria&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;100 NGN&lt;/td&gt; &gt;                             &lt;td&gt; - &lt;/td&gt; &lt;!- - TODO - -&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Nigeria - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üáπüáø Tanzania&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                          &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;2,500 TZS&lt;/td&gt; &gt;                             &lt;td&gt;1,000,000 TZS&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Tanzania - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt; &gt;  &gt; &lt;details&gt; &gt; &lt;summary&gt;üá∑üáº Rwanda&lt;/summary&gt; &gt; &lt;table&gt; &gt;     &lt;thead&gt; &gt;         &lt;tr&gt; &gt;             &lt;th&gt;Field&lt;/th&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/thead&gt; &gt;     &lt;tbody&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;amount.value&lt;/td&gt; &gt;             &lt;td&gt; &gt;                 &lt;table&gt; &gt;                     &lt;thead&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;th&gt;Min&lt;/th&gt; &gt;                             &lt;th&gt;Max&lt;/th&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/thead&gt; &gt;                     &lt;tbody&gt; &gt;                         &lt;tr&gt; &gt;                             &lt;td&gt;500 RWF&lt;/td&gt; &gt;                             &lt;td&gt;-&lt;/td&gt; &gt;                         &lt;/tr&gt; &gt;                     &lt;/tbody&gt; &gt;                 &lt;/table&gt; &gt;             &lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.type&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.name&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line1&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line2&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.line3&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.city&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.postal_code&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.address.country&lt;/td&gt; &gt;             &lt;td&gt;Required&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.dob&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.country&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.number&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.issued_on&lt;/td&gt; &gt;             &lt;td&gt;-&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;         &lt;tr&gt; &gt;             &lt;td&gt;sender.individual.identity_document.expires_on&lt;/td&gt; &gt;             &lt;td&gt;Required (with type INDIVIDUAL)&lt;/td&gt; &lt;!- - Rwanda - -&gt; &gt;         &lt;/tr&gt; &gt;     &lt;/tbody&gt; &gt; &lt;/table&gt; &gt; &lt;br&gt; &gt; &lt;/details&gt;
        /// </summary>
        /// <exception cref="rafikigen.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="xIdempotencyKey">üö®Ô∏è Prevent duplicate payouts! See: [x-idempotency-key security scheme](idempotency)</param>
        /// <param name="openapiPayoutCreateRequest">The payout</param>
        /// <param name="operationIndex">Index associated with the operation.</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (PayoutsPost202Response)</returns>
        public async System.Threading.Tasks.Task<rafikigen.Client.ApiResponse<PayoutsPost202Response>> PayoutsPostWithHttpInfoAsync(string xIdempotencyKey, OpenapiPayoutCreateRequest openapiPayoutCreateRequest, int operationIndex = 0, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'xIdempotencyKey' is set
            if (xIdempotencyKey == null)
            {
                throw new rafikigen.Client.ApiException(400, "Missing required parameter 'xIdempotencyKey' when calling PayoutApi->PayoutsPost");
            }

            // verify the required parameter 'openapiPayoutCreateRequest' is set
            if (openapiPayoutCreateRequest == null)
            {
                throw new rafikigen.Client.ApiException(400, "Missing required parameter 'openapiPayoutCreateRequest' when calling PayoutApi->PayoutsPost");
            }


            rafikigen.Client.RequestOptions localVarRequestOptions = new rafikigen.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = rafikigen.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = rafikigen.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.HeaderParameters.Add("X-Idempotency-Key", rafikigen.Client.ClientUtils.ParameterToString(xIdempotencyKey)); // header parameter
            localVarRequestOptions.Data = openapiPayoutCreateRequest;

            localVarRequestOptions.Operation = "PayoutApi.PayoutsPost";
            localVarRequestOptions.OperationIndex = operationIndex;

            // authentication (Bearer) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("Authorization")))
            {
                localVarRequestOptions.HeaderParameters.Add("Authorization", this.Configuration.GetApiKeyWithPrefix("Authorization"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<PayoutsPost202Response>("/payouts", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("PayoutsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
