/*
 * Resources
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = rafikigen.Client.OpenAPIDateConverter;

namespace rafikigen.Model
{
    /// <summary>
    /// OpenapiPaymentAccountGetOrCreateResponseMobileMoney
    /// </summary>
    [DataContract(Name = "openapi_PaymentAccountGetOrCreateResponse_mobile_money")]
    public partial class OpenapiPaymentAccountGetOrCreateResponseMobileMoney : IEquatable<OpenapiPaymentAccountGetOrCreateResponseMobileMoney>, IValidatableObject
    {
        /// <summary>
        /// Defines VarOperator
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum OperatorEnum
        {
            /// <summary>
            /// Enum SAFARICOM for value: SAFARICOM
            /// </summary>
            [EnumMember(Value = "SAFARICOM")]
            SAFARICOM = 1,

            /// <summary>
            /// Enum AIRTEL for value: AIRTEL
            /// </summary>
            [EnumMember(Value = "AIRTEL")]
            AIRTEL = 2,

            /// <summary>
            /// Enum VODACOM for value: VODACOM
            /// </summary>
            [EnumMember(Value = "VODACOM")]
            VODACOM = 3,

            /// <summary>
            /// Enum TIGO for value: TIGO
            /// </summary>
            [EnumMember(Value = "TIGO")]
            TIGO = 4,

            /// <summary>
            /// Enum HALOTEL for value: HALOTEL
            /// </summary>
            [EnumMember(Value = "HALOTEL")]
            HALOTEL = 5,

            /// <summary>
            /// Enum TTCL for value: TTCL
            /// </summary>
            [EnumMember(Value = "TTCL")]
            TTCL = 6,

            /// <summary>
            /// Enum MTN for value: MTN
            /// </summary>
            [EnumMember(Value = "MTN")]
            MTN = 7,

            /// <summary>
            /// Enum VODAFONE for value: VODAFONE
            /// </summary>
            [EnumMember(Value = "VODAFONE")]
            VODAFONE = 8,

            /// <summary>
            /// Enum MOOV for value: MOOV
            /// </summary>
            [EnumMember(Value = "MOOV")]
            MOOV = 9,

            /// <summary>
            /// Enum ORANGE for value: ORANGE
            /// </summary>
            [EnumMember(Value = "ORANGE")]
            ORANGE = 10,

            /// <summary>
            /// Enum FREE for value: FREE
            /// </summary>
            [EnumMember(Value = "FREE")]
            FREE = 11,

            /// <summary>
            /// Enum EXPRESSO for value: EXPRESSO
            /// </summary>
            [EnumMember(Value = "EXPRESSO")]
            EXPRESSO = 12
        }


        /// <summary>
        /// Gets or Sets VarOperator
        /// </summary>
        /// <example>SAFARICOM</example>
        [DataMember(Name = "operator", EmitDefaultValue = false)]
        public OperatorEnum? VarOperator { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="OpenapiPaymentAccountGetOrCreateResponseMobileMoney" /> class.
        /// </summary>
        /// <param name="number">number.</param>
        /// <param name="varOperator">varOperator.</param>
        public OpenapiPaymentAccountGetOrCreateResponseMobileMoney(string number = default(string), OperatorEnum? varOperator = default(OperatorEnum?))
        {
            this.Number = number;
            this.VarOperator = varOperator;
        }

        /// <summary>
        /// Gets or Sets Number
        /// </summary>
        /// <example>+254000000000</example>
        [DataMember(Name = "number", EmitDefaultValue = false)]
        public string Number { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OpenapiPaymentAccountGetOrCreateResponseMobileMoney {\n");
            sb.Append("  Number: ").Append(Number).Append("\n");
            sb.Append("  VarOperator: ").Append(VarOperator).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OpenapiPaymentAccountGetOrCreateResponseMobileMoney);
        }

        /// <summary>
        /// Returns true if OpenapiPaymentAccountGetOrCreateResponseMobileMoney instances are equal
        /// </summary>
        /// <param name="input">Instance of OpenapiPaymentAccountGetOrCreateResponseMobileMoney to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OpenapiPaymentAccountGetOrCreateResponseMobileMoney input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Number == input.Number ||
                    (this.Number != null &&
                    this.Number.Equals(input.Number))
                ) && 
                (
                    this.VarOperator == input.VarOperator ||
                    this.VarOperator.Equals(input.VarOperator)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Number != null)
                {
                    hashCode = (hashCode * 59) + this.Number.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.VarOperator.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
