/**
 * Resources
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OpenapiPayoutCreateResponseState model module.
 * @module model/OpenapiPayoutCreateResponseState
 * @version 1
 */
class OpenapiPayoutCreateResponseState {
    /**
     * Constructs a new <code>OpenapiPayoutCreateResponseState</code>.
     * @alias module:model/OpenapiPayoutCreateResponseState
     */
    constructor() { 
        
        OpenapiPayoutCreateResponseState.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OpenapiPayoutCreateResponseState</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OpenapiPayoutCreateResponseState} obj Optional instance to populate.
     * @return {module:model/OpenapiPayoutCreateResponseState} The populated <code>OpenapiPayoutCreateResponseState</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OpenapiPayoutCreateResponseState();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = ApiClient.convertToType(data['context'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OpenapiPayoutCreateResponseState</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OpenapiPayoutCreateResponseState</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['context'] && !(typeof data['context'] === 'string' || data['context'] instanceof String)) {
            throw new Error("Expected the field `context` to be a primitive type in the JSON string but got " + data['context']);
        }

        return true;
    }


}



/**
 * The state code signifies the overall status of a payout. For detailed information about the meaning of each state, please consult the lifecycle section above.
 * @member {module:model/OpenapiPayoutCreateResponseState.CodeEnum} code
 */
OpenapiPayoutCreateResponseState.prototype['code'] = undefined;

/**
 * Together with the \"code\" property, the \"context\" property offers additional context and information, whenever possible, about the specific state. For instance, if a payout fails, there are numerous reasons why this might occur. The \"context\" property will provide more detailed information in such cases.
 * @member {String} context
 */
OpenapiPayoutCreateResponseState.prototype['context'] = undefined;





/**
 * Allowed values for the <code>code</code> property.
 * @enum {String}
 * @readonly
 */
OpenapiPayoutCreateResponseState['CodeEnum'] = {

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "REVERSED"
     * @const
     */
    "REVERSED": "REVERSED",

    /**
     * value: "SENT"
     * @const
     */
    "SENT": "SENT",

    /**
     * value: "CANCELLED"
     * @const
     */
    "CANCELLED": "CANCELLED",

    /**
     * value: "FAILED"
     * @const
     */
    "FAILED": "FAILED"
};



export default OpenapiPayoutCreateResponseState;

