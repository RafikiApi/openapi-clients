/*
 * Resources
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BanksGet200ResponseAllOfDataInner {
    /// If the bank operates across multiple branches within a country, this property will be included, listing all the branches available from the bank.
    #[serde(rename = "branches", skip_serializing_if = "Option::is_none")]
    pub branches: Option<Vec<crate::models::BanksGet200ResponseAllOfDataInnerBranchesInner>>,
    /// The ISO 3166 alpha-2 country code in which the bank operates.
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl BanksGet200ResponseAllOfDataInner {
    pub fn new() -> BanksGet200ResponseAllOfDataInner {
        BanksGet200ResponseAllOfDataInner {
            branches: None,
            country: None,
            id: None,
            name: None,
        }
    }
}


