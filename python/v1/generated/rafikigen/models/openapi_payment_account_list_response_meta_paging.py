# coding: utf-8

"""
    Resources

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, StrictStr
from rafikigen.models.openapi_payment_account_list_response_meta_paging_cursors import OpenapiPaymentAccountListResponseMetaPagingCursors

class OpenapiPaymentAccountListResponseMetaPaging(BaseModel):
    """
    OpenapiPaymentAccountListResponseMetaPaging
    """
    cursors: Optional[OpenapiPaymentAccountListResponseMetaPagingCursors] = None
    next: Optional[StrictStr] = None
    __properties = ["cursors", "next"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> OpenapiPaymentAccountListResponseMetaPaging:
        """Create an instance of OpenapiPaymentAccountListResponseMetaPaging from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # override the default output from pydantic by calling `to_dict()` of cursors
        if self.cursors:
            _dict['cursors'] = self.cursors.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> OpenapiPaymentAccountListResponseMetaPaging:
        """Create an instance of OpenapiPaymentAccountListResponseMetaPaging from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return OpenapiPaymentAccountListResponseMetaPaging.parse_obj(obj)

        _obj = OpenapiPaymentAccountListResponseMetaPaging.parse_obj({
            "cursors": OpenapiPaymentAccountListResponseMetaPagingCursors.from_dict(obj.get("cursors")) if obj.get("cursors") is not None else None,
            "next": obj.get("next")
        })
        return _obj


