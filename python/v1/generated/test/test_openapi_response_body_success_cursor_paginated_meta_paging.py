# coding: utf-8

"""
    Resources

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from rafikigen.models.openapi_response_body_success_cursor_paginated_meta_paging import OpenapiResponseBodySuccessCursorPaginatedMetaPaging  # noqa: E501

class TestOpenapiResponseBodySuccessCursorPaginatedMetaPaging(unittest.TestCase):
    """OpenapiResponseBodySuccessCursorPaginatedMetaPaging unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OpenapiResponseBodySuccessCursorPaginatedMetaPaging:
        """Test OpenapiResponseBodySuccessCursorPaginatedMetaPaging
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OpenapiResponseBodySuccessCursorPaginatedMetaPaging`
        """
        model = OpenapiResponseBodySuccessCursorPaginatedMetaPaging()  # noqa: E501
        if include_optional:
            return OpenapiResponseBodySuccessCursorPaginatedMetaPaging(
                cursors = rafikigen.models.openapi_response_body_success_cursor_paginated_meta_paging_cursors.openapi_ResponseBodySuccessCursorPaginated_meta_paging_cursors(
                    after = 'dHJ4LTJXTFhiOGJQNnNTN1FSdkE2QUZHcDdOaEdzNw==', ),
                next = 'https://rest.sandbox.rafiki-api.com/v1/payouts?paging_after=dHJ4LTJXTFhiOGJQNnNTN1FSdkE2QUZHcDdOaEdzNw%3D%3D&paging_limit=10'
            )
        else:
            return OpenapiResponseBodySuccessCursorPaginatedMetaPaging(
        )
        """

    def testOpenapiResponseBodySuccessCursorPaginatedMetaPaging(self):
        """Test OpenapiResponseBodySuccessCursorPaginatedMetaPaging"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
