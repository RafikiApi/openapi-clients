/*
Resources

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafikigen

import (
	"encoding/json"
)

// checks if the OpenapiLookupGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenapiLookupGetResponse{}

// OpenapiLookupGetResponse struct for OpenapiLookupGetResponse
type OpenapiLookupGetResponse struct {
	Holder *OpenapiLookupGetResponseHolder `json:"holder,omitempty"`
}

// NewOpenapiLookupGetResponse instantiates a new OpenapiLookupGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapiLookupGetResponse() *OpenapiLookupGetResponse {
	this := OpenapiLookupGetResponse{}
	return &this
}

// NewOpenapiLookupGetResponseWithDefaults instantiates a new OpenapiLookupGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapiLookupGetResponseWithDefaults() *OpenapiLookupGetResponse {
	this := OpenapiLookupGetResponse{}
	return &this
}

// GetHolder returns the Holder field value if set, zero value otherwise.
func (o *OpenapiLookupGetResponse) GetHolder() OpenapiLookupGetResponseHolder {
	if o == nil || IsNil(o.Holder) {
		var ret OpenapiLookupGetResponseHolder
		return ret
	}
	return *o.Holder
}

// GetHolderOk returns a tuple with the Holder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiLookupGetResponse) GetHolderOk() (*OpenapiLookupGetResponseHolder, bool) {
	if o == nil || IsNil(o.Holder) {
		return nil, false
	}
	return o.Holder, true
}

// HasHolder returns a boolean if a field has been set.
func (o *OpenapiLookupGetResponse) HasHolder() bool {
	if o != nil && !IsNil(o.Holder) {
		return true
	}

	return false
}

// SetHolder gets a reference to the given OpenapiLookupGetResponseHolder and assigns it to the Holder field.
func (o *OpenapiLookupGetResponse) SetHolder(v OpenapiLookupGetResponseHolder) {
	o.Holder = &v
}

func (o OpenapiLookupGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenapiLookupGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Holder) {
		toSerialize["holder"] = o.Holder
	}
	return toSerialize, nil
}

type NullableOpenapiLookupGetResponse struct {
	value *OpenapiLookupGetResponse
	isSet bool
}

func (v NullableOpenapiLookupGetResponse) Get() *OpenapiLookupGetResponse {
	return v.value
}

func (v *NullableOpenapiLookupGetResponse) Set(val *OpenapiLookupGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapiLookupGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapiLookupGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapiLookupGetResponse(val *OpenapiLookupGetResponse) *NullableOpenapiLookupGetResponse {
	return &NullableOpenapiLookupGetResponse{value: val, isSet: true}
}

func (v NullableOpenapiLookupGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapiLookupGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


