/*
Resources

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafikigen

import (
	"encoding/json"
)

// checks if the OpenapiPayoutListResponseMetaPagingCursors type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenapiPayoutListResponseMetaPagingCursors{}

// OpenapiPayoutListResponseMetaPagingCursors struct for OpenapiPayoutListResponseMetaPagingCursors
type OpenapiPayoutListResponseMetaPagingCursors struct {
	After *string `json:"after,omitempty"`
}

// NewOpenapiPayoutListResponseMetaPagingCursors instantiates a new OpenapiPayoutListResponseMetaPagingCursors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapiPayoutListResponseMetaPagingCursors() *OpenapiPayoutListResponseMetaPagingCursors {
	this := OpenapiPayoutListResponseMetaPagingCursors{}
	return &this
}

// NewOpenapiPayoutListResponseMetaPagingCursorsWithDefaults instantiates a new OpenapiPayoutListResponseMetaPagingCursors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapiPayoutListResponseMetaPagingCursorsWithDefaults() *OpenapiPayoutListResponseMetaPagingCursors {
	this := OpenapiPayoutListResponseMetaPagingCursors{}
	return &this
}

// GetAfter returns the After field value if set, zero value otherwise.
func (o *OpenapiPayoutListResponseMetaPagingCursors) GetAfter() string {
	if o == nil || IsNil(o.After) {
		var ret string
		return ret
	}
	return *o.After
}

// GetAfterOk returns a tuple with the After field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutListResponseMetaPagingCursors) GetAfterOk() (*string, bool) {
	if o == nil || IsNil(o.After) {
		return nil, false
	}
	return o.After, true
}

// HasAfter returns a boolean if a field has been set.
func (o *OpenapiPayoutListResponseMetaPagingCursors) HasAfter() bool {
	if o != nil && !IsNil(o.After) {
		return true
	}

	return false
}

// SetAfter gets a reference to the given string and assigns it to the After field.
func (o *OpenapiPayoutListResponseMetaPagingCursors) SetAfter(v string) {
	o.After = &v
}

func (o OpenapiPayoutListResponseMetaPagingCursors) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenapiPayoutListResponseMetaPagingCursors) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.After) {
		toSerialize["after"] = o.After
	}
	return toSerialize, nil
}

type NullableOpenapiPayoutListResponseMetaPagingCursors struct {
	value *OpenapiPayoutListResponseMetaPagingCursors
	isSet bool
}

func (v NullableOpenapiPayoutListResponseMetaPagingCursors) Get() *OpenapiPayoutListResponseMetaPagingCursors {
	return v.value
}

func (v *NullableOpenapiPayoutListResponseMetaPagingCursors) Set(val *OpenapiPayoutListResponseMetaPagingCursors) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapiPayoutListResponseMetaPagingCursors) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapiPayoutListResponseMetaPagingCursors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapiPayoutListResponseMetaPagingCursors(val *OpenapiPayoutListResponseMetaPagingCursors) *NullableOpenapiPayoutListResponseMetaPagingCursors {
	return &NullableOpenapiPayoutListResponseMetaPagingCursors{value: val, isSet: true}
}

func (v NullableOpenapiPayoutListResponseMetaPagingCursors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapiPayoutListResponseMetaPagingCursors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


