/*
Resources

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafikigen

import (
	"encoding/json"
)

// checks if the PayoutsPost202Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PayoutsPost202Response{}

// PayoutsPost202Response struct for PayoutsPost202Response
type PayoutsPost202Response struct {
	Data *OpenapiPayoutCreateResponse `json:"data,omitempty"`
}

// NewPayoutsPost202Response instantiates a new PayoutsPost202Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPayoutsPost202Response() *PayoutsPost202Response {
	this := PayoutsPost202Response{}
	return &this
}

// NewPayoutsPost202ResponseWithDefaults instantiates a new PayoutsPost202Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPayoutsPost202ResponseWithDefaults() *PayoutsPost202Response {
	this := PayoutsPost202Response{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *PayoutsPost202Response) GetData() OpenapiPayoutCreateResponse {
	if o == nil || IsNil(o.Data) {
		var ret OpenapiPayoutCreateResponse
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PayoutsPost202Response) GetDataOk() (*OpenapiPayoutCreateResponse, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *PayoutsPost202Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given OpenapiPayoutCreateResponse and assigns it to the Data field.
func (o *PayoutsPost202Response) SetData(v OpenapiPayoutCreateResponse) {
	o.Data = &v
}

func (o PayoutsPost202Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PayoutsPost202Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullablePayoutsPost202Response struct {
	value *PayoutsPost202Response
	isSet bool
}

func (v NullablePayoutsPost202Response) Get() *PayoutsPost202Response {
	return v.value
}

func (v *NullablePayoutsPost202Response) Set(val *PayoutsPost202Response) {
	v.value = val
	v.isSet = true
}

func (v NullablePayoutsPost202Response) IsSet() bool {
	return v.isSet
}

func (v *NullablePayoutsPost202Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePayoutsPost202Response(val *PayoutsPost202Response) *NullablePayoutsPost202Response {
	return &NullablePayoutsPost202Response{value: val, isSet: true}
}

func (v NullablePayoutsPost202Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePayoutsPost202Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


