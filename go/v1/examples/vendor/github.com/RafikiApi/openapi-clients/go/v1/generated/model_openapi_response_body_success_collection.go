/*
Resources

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafikigen

import (
	"encoding/json"
)

// checks if the OpenapiResponseBodySuccessCollection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenapiResponseBodySuccessCollection{}

// OpenapiResponseBodySuccessCollection struct for OpenapiResponseBodySuccessCollection
type OpenapiResponseBodySuccessCollection struct {
	Data []interface{} `json:"data,omitempty"`
	Meta interface{} `json:"meta,omitempty"`
}

// NewOpenapiResponseBodySuccessCollection instantiates a new OpenapiResponseBodySuccessCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapiResponseBodySuccessCollection() *OpenapiResponseBodySuccessCollection {
	this := OpenapiResponseBodySuccessCollection{}
	return &this
}

// NewOpenapiResponseBodySuccessCollectionWithDefaults instantiates a new OpenapiResponseBodySuccessCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapiResponseBodySuccessCollectionWithDefaults() *OpenapiResponseBodySuccessCollection {
	this := OpenapiResponseBodySuccessCollection{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *OpenapiResponseBodySuccessCollection) GetData() []interface{} {
	if o == nil || IsNil(o.Data) {
		var ret []interface{}
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiResponseBodySuccessCollection) GetDataOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *OpenapiResponseBodySuccessCollection) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []interface{} and assigns it to the Data field.
func (o *OpenapiResponseBodySuccessCollection) SetData(v []interface{}) {
	o.Data = v
}

// GetMeta returns the Meta field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OpenapiResponseBodySuccessCollection) GetMeta() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OpenapiResponseBodySuccessCollection) GetMetaOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return &o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *OpenapiResponseBodySuccessCollection) HasMeta() bool {
	if o != nil && IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given interface{} and assigns it to the Meta field.
func (o *OpenapiResponseBodySuccessCollection) SetMeta(v interface{}) {
	o.Meta = v
}

func (o OpenapiResponseBodySuccessCollection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenapiResponseBodySuccessCollection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if o.Meta != nil {
		toSerialize["meta"] = o.Meta
	}
	return toSerialize, nil
}

type NullableOpenapiResponseBodySuccessCollection struct {
	value *OpenapiResponseBodySuccessCollection
	isSet bool
}

func (v NullableOpenapiResponseBodySuccessCollection) Get() *OpenapiResponseBodySuccessCollection {
	return v.value
}

func (v *NullableOpenapiResponseBodySuccessCollection) Set(val *OpenapiResponseBodySuccessCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapiResponseBodySuccessCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapiResponseBodySuccessCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapiResponseBodySuccessCollection(val *OpenapiResponseBodySuccessCollection) *NullableOpenapiResponseBodySuccessCollection {
	return &NullableOpenapiResponseBodySuccessCollection{value: val, isSet: true}
}

func (v NullableOpenapiResponseBodySuccessCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapiResponseBodySuccessCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


