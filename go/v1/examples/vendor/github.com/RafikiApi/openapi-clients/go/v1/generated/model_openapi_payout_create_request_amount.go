/*
Resources

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafikigen

import (
	"encoding/json"
)

// checks if the OpenapiPayoutCreateRequestAmount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenapiPayoutCreateRequestAmount{}

// OpenapiPayoutCreateRequestAmount <span style=\"color:#e95f6a;\">required</span>  The intended amount to send to either the payment_account_id or payment_account
type OpenapiPayoutCreateRequestAmount struct {
	// <span style=\"color:#e95f6a;\">required</span>  The currency associated with the amount value, formatted according to ISO 4217
	Currency *string `json:"currency,omitempty"`
	// <span style=\"color:#e95f6a;\">required</span>
	Value *string `json:"value,omitempty"`
}

// NewOpenapiPayoutCreateRequestAmount instantiates a new OpenapiPayoutCreateRequestAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapiPayoutCreateRequestAmount() *OpenapiPayoutCreateRequestAmount {
	this := OpenapiPayoutCreateRequestAmount{}
	return &this
}

// NewOpenapiPayoutCreateRequestAmountWithDefaults instantiates a new OpenapiPayoutCreateRequestAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapiPayoutCreateRequestAmountWithDefaults() *OpenapiPayoutCreateRequestAmount {
	this := OpenapiPayoutCreateRequestAmount{}
	return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequestAmount) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequestAmount) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequestAmount) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *OpenapiPayoutCreateRequestAmount) SetCurrency(v string) {
	o.Currency = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequestAmount) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequestAmount) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequestAmount) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *OpenapiPayoutCreateRequestAmount) SetValue(v string) {
	o.Value = &v
}

func (o OpenapiPayoutCreateRequestAmount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenapiPayoutCreateRequestAmount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableOpenapiPayoutCreateRequestAmount struct {
	value *OpenapiPayoutCreateRequestAmount
	isSet bool
}

func (v NullableOpenapiPayoutCreateRequestAmount) Get() *OpenapiPayoutCreateRequestAmount {
	return v.value
}

func (v *NullableOpenapiPayoutCreateRequestAmount) Set(val *OpenapiPayoutCreateRequestAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapiPayoutCreateRequestAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapiPayoutCreateRequestAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapiPayoutCreateRequestAmount(val *OpenapiPayoutCreateRequestAmount) *NullableOpenapiPayoutCreateRequestAmount {
	return &NullableOpenapiPayoutCreateRequestAmount{value: val, isSet: true}
}

func (v NullableOpenapiPayoutCreateRequestAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapiPayoutCreateRequestAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


