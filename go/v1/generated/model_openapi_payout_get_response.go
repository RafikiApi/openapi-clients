/*
Resources

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafikigen

import (
	"encoding/json"
)

// checks if the OpenapiPayoutGetResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenapiPayoutGetResponse{}

// OpenapiPayoutGetResponse struct for OpenapiPayoutGetResponse
type OpenapiPayoutGetResponse struct {
	Amount *OpenapiPayoutCreateResponseAmount `json:"amount,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	CustomId *string `json:"custom_id,omitempty"`
	// The payout unique identifier
	Id *string `json:"id,omitempty"`
	OnBehalfOf []string `json:"on_behalf_of,omitempty"`
	// The recipient payment account receiving funds
	PaymentAccountId *string `json:"payment_account_id,omitempty"`
	Purpose *string `json:"purpose,omitempty"`
	// The reference provided by the recipient account's actual bank or telco on a successful payout.  > ⚠️ > It's important to be aware that this information might not be accessible for every payout. If there's no way for us to obtain it, this property will be omitted entirely. Hence, we highly recommend implementing conditional checks to confirm the presence of this property.
	Receipt *string `json:"receipt,omitempty"`
	Sender *OpenapiPayoutCreateResponseSender `json:"sender,omitempty"`
	State *OpenapiPayoutCreateResponseState `json:"state,omitempty"`
	// The wallet ID from which the money will disburse
	WalletId *string `json:"wallet_id,omitempty"`
}

// NewOpenapiPayoutGetResponse instantiates a new OpenapiPayoutGetResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapiPayoutGetResponse() *OpenapiPayoutGetResponse {
	this := OpenapiPayoutGetResponse{}
	return &this
}

// NewOpenapiPayoutGetResponseWithDefaults instantiates a new OpenapiPayoutGetResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapiPayoutGetResponseWithDefaults() *OpenapiPayoutGetResponse {
	this := OpenapiPayoutGetResponse{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetAmount() OpenapiPayoutCreateResponseAmount {
	if o == nil || IsNil(o.Amount) {
		var ret OpenapiPayoutCreateResponseAmount
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetAmountOk() (*OpenapiPayoutCreateResponseAmount, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given OpenapiPayoutCreateResponseAmount and assigns it to the Amount field.
func (o *OpenapiPayoutGetResponse) SetAmount(v OpenapiPayoutCreateResponseAmount) {
	o.Amount = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *OpenapiPayoutGetResponse) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCustomId returns the CustomId field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetCustomId() string {
	if o == nil || IsNil(o.CustomId) {
		var ret string
		return ret
	}
	return *o.CustomId
}

// GetCustomIdOk returns a tuple with the CustomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetCustomIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomId) {
		return nil, false
	}
	return o.CustomId, true
}

// HasCustomId returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasCustomId() bool {
	if o != nil && !IsNil(o.CustomId) {
		return true
	}

	return false
}

// SetCustomId gets a reference to the given string and assigns it to the CustomId field.
func (o *OpenapiPayoutGetResponse) SetCustomId(v string) {
	o.CustomId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OpenapiPayoutGetResponse) SetId(v string) {
	o.Id = &v
}

// GetOnBehalfOf returns the OnBehalfOf field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetOnBehalfOf() []string {
	if o == nil || IsNil(o.OnBehalfOf) {
		var ret []string
		return ret
	}
	return o.OnBehalfOf
}

// GetOnBehalfOfOk returns a tuple with the OnBehalfOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetOnBehalfOfOk() ([]string, bool) {
	if o == nil || IsNil(o.OnBehalfOf) {
		return nil, false
	}
	return o.OnBehalfOf, true
}

// HasOnBehalfOf returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasOnBehalfOf() bool {
	if o != nil && !IsNil(o.OnBehalfOf) {
		return true
	}

	return false
}

// SetOnBehalfOf gets a reference to the given []string and assigns it to the OnBehalfOf field.
func (o *OpenapiPayoutGetResponse) SetOnBehalfOf(v []string) {
	o.OnBehalfOf = v
}

// GetPaymentAccountId returns the PaymentAccountId field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetPaymentAccountId() string {
	if o == nil || IsNil(o.PaymentAccountId) {
		var ret string
		return ret
	}
	return *o.PaymentAccountId
}

// GetPaymentAccountIdOk returns a tuple with the PaymentAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetPaymentAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentAccountId) {
		return nil, false
	}
	return o.PaymentAccountId, true
}

// HasPaymentAccountId returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasPaymentAccountId() bool {
	if o != nil && !IsNil(o.PaymentAccountId) {
		return true
	}

	return false
}

// SetPaymentAccountId gets a reference to the given string and assigns it to the PaymentAccountId field.
func (o *OpenapiPayoutGetResponse) SetPaymentAccountId(v string) {
	o.PaymentAccountId = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetPurpose() string {
	if o == nil || IsNil(o.Purpose) {
		var ret string
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetPurposeOk() (*string, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given string and assigns it to the Purpose field.
func (o *OpenapiPayoutGetResponse) SetPurpose(v string) {
	o.Purpose = &v
}

// GetReceipt returns the Receipt field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetReceipt() string {
	if o == nil || IsNil(o.Receipt) {
		var ret string
		return ret
	}
	return *o.Receipt
}

// GetReceiptOk returns a tuple with the Receipt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetReceiptOk() (*string, bool) {
	if o == nil || IsNil(o.Receipt) {
		return nil, false
	}
	return o.Receipt, true
}

// HasReceipt returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasReceipt() bool {
	if o != nil && !IsNil(o.Receipt) {
		return true
	}

	return false
}

// SetReceipt gets a reference to the given string and assigns it to the Receipt field.
func (o *OpenapiPayoutGetResponse) SetReceipt(v string) {
	o.Receipt = &v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetSender() OpenapiPayoutCreateResponseSender {
	if o == nil || IsNil(o.Sender) {
		var ret OpenapiPayoutCreateResponseSender
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetSenderOk() (*OpenapiPayoutCreateResponseSender, bool) {
	if o == nil || IsNil(o.Sender) {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasSender() bool {
	if o != nil && !IsNil(o.Sender) {
		return true
	}

	return false
}

// SetSender gets a reference to the given OpenapiPayoutCreateResponseSender and assigns it to the Sender field.
func (o *OpenapiPayoutGetResponse) SetSender(v OpenapiPayoutCreateResponseSender) {
	o.Sender = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetState() OpenapiPayoutCreateResponseState {
	if o == nil || IsNil(o.State) {
		var ret OpenapiPayoutCreateResponseState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetStateOk() (*OpenapiPayoutCreateResponseState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given OpenapiPayoutCreateResponseState and assigns it to the State field.
func (o *OpenapiPayoutGetResponse) SetState(v OpenapiPayoutCreateResponseState) {
	o.State = &v
}

// GetWalletId returns the WalletId field value if set, zero value otherwise.
func (o *OpenapiPayoutGetResponse) GetWalletId() string {
	if o == nil || IsNil(o.WalletId) {
		var ret string
		return ret
	}
	return *o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutGetResponse) GetWalletIdOk() (*string, bool) {
	if o == nil || IsNil(o.WalletId) {
		return nil, false
	}
	return o.WalletId, true
}

// HasWalletId returns a boolean if a field has been set.
func (o *OpenapiPayoutGetResponse) HasWalletId() bool {
	if o != nil && !IsNil(o.WalletId) {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given string and assigns it to the WalletId field.
func (o *OpenapiPayoutGetResponse) SetWalletId(v string) {
	o.WalletId = &v
}

func (o OpenapiPayoutGetResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenapiPayoutGetResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CustomId) {
		toSerialize["custom_id"] = o.CustomId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.OnBehalfOf) {
		toSerialize["on_behalf_of"] = o.OnBehalfOf
	}
	if !IsNil(o.PaymentAccountId) {
		toSerialize["payment_account_id"] = o.PaymentAccountId
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.Receipt) {
		toSerialize["receipt"] = o.Receipt
	}
	if !IsNil(o.Sender) {
		toSerialize["sender"] = o.Sender
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.WalletId) {
		toSerialize["wallet_id"] = o.WalletId
	}
	return toSerialize, nil
}

type NullableOpenapiPayoutGetResponse struct {
	value *OpenapiPayoutGetResponse
	isSet bool
}

func (v NullableOpenapiPayoutGetResponse) Get() *OpenapiPayoutGetResponse {
	return v.value
}

func (v *NullableOpenapiPayoutGetResponse) Set(val *OpenapiPayoutGetResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapiPayoutGetResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapiPayoutGetResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapiPayoutGetResponse(val *OpenapiPayoutGetResponse) *NullableOpenapiPayoutGetResponse {
	return &NullableOpenapiPayoutGetResponse{value: val, isSet: true}
}

func (v NullableOpenapiPayoutGetResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapiPayoutGetResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


