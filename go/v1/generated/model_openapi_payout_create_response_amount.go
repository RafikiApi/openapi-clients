/*
Resources

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafikigen

import (
	"encoding/json"
)

// checks if the OpenapiPayoutCreateResponseAmount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenapiPayoutCreateResponseAmount{}

// OpenapiPayoutCreateResponseAmount struct for OpenapiPayoutCreateResponseAmount
type OpenapiPayoutCreateResponseAmount struct {
	// The currency associated with the amount value, formatted according to ISO 4217
	Currency *string `json:"currency,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewOpenapiPayoutCreateResponseAmount instantiates a new OpenapiPayoutCreateResponseAmount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapiPayoutCreateResponseAmount() *OpenapiPayoutCreateResponseAmount {
	this := OpenapiPayoutCreateResponseAmount{}
	return &this
}

// NewOpenapiPayoutCreateResponseAmountWithDefaults instantiates a new OpenapiPayoutCreateResponseAmount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapiPayoutCreateResponseAmountWithDefaults() *OpenapiPayoutCreateResponseAmount {
	this := OpenapiPayoutCreateResponseAmount{}
	return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateResponseAmount) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateResponseAmount) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateResponseAmount) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *OpenapiPayoutCreateResponseAmount) SetCurrency(v string) {
	o.Currency = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateResponseAmount) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateResponseAmount) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateResponseAmount) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *OpenapiPayoutCreateResponseAmount) SetValue(v string) {
	o.Value = &v
}

func (o OpenapiPayoutCreateResponseAmount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenapiPayoutCreateResponseAmount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableOpenapiPayoutCreateResponseAmount struct {
	value *OpenapiPayoutCreateResponseAmount
	isSet bool
}

func (v NullableOpenapiPayoutCreateResponseAmount) Get() *OpenapiPayoutCreateResponseAmount {
	return v.value
}

func (v *NullableOpenapiPayoutCreateResponseAmount) Set(val *OpenapiPayoutCreateResponseAmount) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapiPayoutCreateResponseAmount) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapiPayoutCreateResponseAmount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapiPayoutCreateResponseAmount(val *OpenapiPayoutCreateResponseAmount) *NullableOpenapiPayoutCreateResponseAmount {
	return &NullableOpenapiPayoutCreateResponseAmount{value: val, isSet: true}
}

func (v NullableOpenapiPayoutCreateResponseAmount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapiPayoutCreateResponseAmount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


