/*
Resources

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafikigen

import (
	"encoding/json"
)

// checks if the WalletsGet200ResponseAllOfDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletsGet200ResponseAllOfDataInner{}

// WalletsGet200ResponseAllOfDataInner struct for WalletsGet200ResponseAllOfDataInner
type WalletsGet200ResponseAllOfDataInner struct {
	// The actual available balance
	Available *string `json:"available,omitempty"`
	// The total balance yet to settle
	Balance *string `json:"balance,omitempty"`
	// The ISO 4217 currency code associated with the wallet
	Currency *string `json:"currency,omitempty"`
	Id *string `json:"id,omitempty"`
}

// NewWalletsGet200ResponseAllOfDataInner instantiates a new WalletsGet200ResponseAllOfDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletsGet200ResponseAllOfDataInner() *WalletsGet200ResponseAllOfDataInner {
	this := WalletsGet200ResponseAllOfDataInner{}
	return &this
}

// NewWalletsGet200ResponseAllOfDataInnerWithDefaults instantiates a new WalletsGet200ResponseAllOfDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletsGet200ResponseAllOfDataInnerWithDefaults() *WalletsGet200ResponseAllOfDataInner {
	this := WalletsGet200ResponseAllOfDataInner{}
	return &this
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *WalletsGet200ResponseAllOfDataInner) GetAvailable() string {
	if o == nil || IsNil(o.Available) {
		var ret string
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletsGet200ResponseAllOfDataInner) GetAvailableOk() (*string, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *WalletsGet200ResponseAllOfDataInner) HasAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given string and assigns it to the Available field.
func (o *WalletsGet200ResponseAllOfDataInner) SetAvailable(v string) {
	o.Available = &v
}

// GetBalance returns the Balance field value if set, zero value otherwise.
func (o *WalletsGet200ResponseAllOfDataInner) GetBalance() string {
	if o == nil || IsNil(o.Balance) {
		var ret string
		return ret
	}
	return *o.Balance
}

// GetBalanceOk returns a tuple with the Balance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletsGet200ResponseAllOfDataInner) GetBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.Balance) {
		return nil, false
	}
	return o.Balance, true
}

// HasBalance returns a boolean if a field has been set.
func (o *WalletsGet200ResponseAllOfDataInner) HasBalance() bool {
	if o != nil && !IsNil(o.Balance) {
		return true
	}

	return false
}

// SetBalance gets a reference to the given string and assigns it to the Balance field.
func (o *WalletsGet200ResponseAllOfDataInner) SetBalance(v string) {
	o.Balance = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *WalletsGet200ResponseAllOfDataInner) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletsGet200ResponseAllOfDataInner) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *WalletsGet200ResponseAllOfDataInner) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *WalletsGet200ResponseAllOfDataInner) SetCurrency(v string) {
	o.Currency = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WalletsGet200ResponseAllOfDataInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletsGet200ResponseAllOfDataInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WalletsGet200ResponseAllOfDataInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *WalletsGet200ResponseAllOfDataInner) SetId(v string) {
	o.Id = &v
}

func (o WalletsGet200ResponseAllOfDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletsGet200ResponseAllOfDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	if !IsNil(o.Balance) {
		toSerialize["balance"] = o.Balance
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableWalletsGet200ResponseAllOfDataInner struct {
	value *WalletsGet200ResponseAllOfDataInner
	isSet bool
}

func (v NullableWalletsGet200ResponseAllOfDataInner) Get() *WalletsGet200ResponseAllOfDataInner {
	return v.value
}

func (v *NullableWalletsGet200ResponseAllOfDataInner) Set(val *WalletsGet200ResponseAllOfDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletsGet200ResponseAllOfDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletsGet200ResponseAllOfDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletsGet200ResponseAllOfDataInner(val *WalletsGet200ResponseAllOfDataInner) *NullableWalletsGet200ResponseAllOfDataInner {
	return &NullableWalletsGet200ResponseAllOfDataInner{value: val, isSet: true}
}

func (v NullableWalletsGet200ResponseAllOfDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletsGet200ResponseAllOfDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


