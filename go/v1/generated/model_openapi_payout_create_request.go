/*
Resources

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafikigen

import (
	"encoding/json"
)

// checks if the OpenapiPayoutCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenapiPayoutCreateRequest{}

// OpenapiPayoutCreateRequest struct for OpenapiPayoutCreateRequest
type OpenapiPayoutCreateRequest struct {
	Amount *OpenapiPayoutCreateRequestAmount `json:"amount,omitempty"`
	// An optional unique custom id that can be used to reconcile payouts with your own internal systems, this is particularly useful in the event of network failures.  The accepted format can include up to 64 characters, which may consist of both letters, digits, and the symbols \"-\" and \"_\".
	CustomId *string `json:"custom_id,omitempty"`
	OnBehalfOf []string `json:"on_behalf_of,omitempty"`
	PaymentAccount *OpenapiPaymentAccountGetOrCreateRequest `json:"payment_account,omitempty"`
	// <span style=\"color:#e95f6a;\">required if payment_account is empty</span>  The payment account ID represents a pre-existing payment account that acts as the recipient for the payout.
	PaymentAccountId *string `json:"payment_account_id,omitempty"`
	// <span style=\"color:#e95f6a;\">required if payment_account country is GH,UG,EG,CI,SN or CM</span>  The purpose of the payout is a mandatory property that must be provided for compliance and reporting purposes. Choose one of the following predefined values that best describes the nature of the payout:  <ul> <li><code>GOODS_PURCHASE</code>: Payments made for buying physical or digital goods.</li> <li><code>SERVICES_PAYMENT</code>: Payments made for services rendered, including professional services, consulting, and freelance work.</li> <li><code>INVOICE_PAYMENT</code>: Payments made to settle invoices issued for goods or services.</li> <li><code>LOAN_REPAYMENT</code>: Payments made towards repaying loans, including personal, auto, mortgage, and business loans.</li> <li><code>BILLS_PAYMENT</code>: Payments for recurring bills such as utilities, rent, insurance, and telecommunications.</li> <li><code>SALARY_AND_WAGES</code>: Disbursements made to employees for their salaries and wages.</li> <li><code>P2P_TRANSFER</code>: Domestic person-to-person transfers for sending money to friends, family, or acquaintances.</li> <li><code>REMITTANCE</code>: Cross-border person-to-person transfers for sending money to friends, family, or acquaintances.</li> <li><code>DONATION</code>: Payments made to charitable organizations or causes.</li> <li><code>GRANTS_AND_SCHOLARSHIPS</code>: Payments distributed as grants, scholarships, or other forms of financial aid.</li> <li><code>TRAVEL_AND_ACCOMMODATION</code>: Payments made for travel-related expenses, including flight bookings, hotel reservations, and car rentals.</li> <li><code>TAX_PAYMENT</code>: Payments made for settling taxes and duties.</li> <li><code>INSURANCE_PREMIUM</code>: Payments made towards insurance policies, including health, auto, and life insurance.</li> </ul>
	Purpose *string `json:"purpose,omitempty"`
	Sender *OpenapiPayoutCreateRequestSender `json:"sender,omitempty"`
	// The wallet ID from which to disburse money, if not provided, we will attempt to use the one that matches the provided currency amount.
	WalletId *string `json:"wallet_id,omitempty"`
}

// NewOpenapiPayoutCreateRequest instantiates a new OpenapiPayoutCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapiPayoutCreateRequest() *OpenapiPayoutCreateRequest {
	this := OpenapiPayoutCreateRequest{}
	return &this
}

// NewOpenapiPayoutCreateRequestWithDefaults instantiates a new OpenapiPayoutCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapiPayoutCreateRequestWithDefaults() *OpenapiPayoutCreateRequest {
	this := OpenapiPayoutCreateRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequest) GetAmount() OpenapiPayoutCreateRequestAmount {
	if o == nil || IsNil(o.Amount) {
		var ret OpenapiPayoutCreateRequestAmount
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequest) GetAmountOk() (*OpenapiPayoutCreateRequestAmount, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequest) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given OpenapiPayoutCreateRequestAmount and assigns it to the Amount field.
func (o *OpenapiPayoutCreateRequest) SetAmount(v OpenapiPayoutCreateRequestAmount) {
	o.Amount = &v
}

// GetCustomId returns the CustomId field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequest) GetCustomId() string {
	if o == nil || IsNil(o.CustomId) {
		var ret string
		return ret
	}
	return *o.CustomId
}

// GetCustomIdOk returns a tuple with the CustomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequest) GetCustomIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomId) {
		return nil, false
	}
	return o.CustomId, true
}

// HasCustomId returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequest) HasCustomId() bool {
	if o != nil && !IsNil(o.CustomId) {
		return true
	}

	return false
}

// SetCustomId gets a reference to the given string and assigns it to the CustomId field.
func (o *OpenapiPayoutCreateRequest) SetCustomId(v string) {
	o.CustomId = &v
}

// GetOnBehalfOf returns the OnBehalfOf field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequest) GetOnBehalfOf() []string {
	if o == nil || IsNil(o.OnBehalfOf) {
		var ret []string
		return ret
	}
	return o.OnBehalfOf
}

// GetOnBehalfOfOk returns a tuple with the OnBehalfOf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequest) GetOnBehalfOfOk() ([]string, bool) {
	if o == nil || IsNil(o.OnBehalfOf) {
		return nil, false
	}
	return o.OnBehalfOf, true
}

// HasOnBehalfOf returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequest) HasOnBehalfOf() bool {
	if o != nil && !IsNil(o.OnBehalfOf) {
		return true
	}

	return false
}

// SetOnBehalfOf gets a reference to the given []string and assigns it to the OnBehalfOf field.
func (o *OpenapiPayoutCreateRequest) SetOnBehalfOf(v []string) {
	o.OnBehalfOf = v
}

// GetPaymentAccount returns the PaymentAccount field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequest) GetPaymentAccount() OpenapiPaymentAccountGetOrCreateRequest {
	if o == nil || IsNil(o.PaymentAccount) {
		var ret OpenapiPaymentAccountGetOrCreateRequest
		return ret
	}
	return *o.PaymentAccount
}

// GetPaymentAccountOk returns a tuple with the PaymentAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequest) GetPaymentAccountOk() (*OpenapiPaymentAccountGetOrCreateRequest, bool) {
	if o == nil || IsNil(o.PaymentAccount) {
		return nil, false
	}
	return o.PaymentAccount, true
}

// HasPaymentAccount returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequest) HasPaymentAccount() bool {
	if o != nil && !IsNil(o.PaymentAccount) {
		return true
	}

	return false
}

// SetPaymentAccount gets a reference to the given OpenapiPaymentAccountGetOrCreateRequest and assigns it to the PaymentAccount field.
func (o *OpenapiPayoutCreateRequest) SetPaymentAccount(v OpenapiPaymentAccountGetOrCreateRequest) {
	o.PaymentAccount = &v
}

// GetPaymentAccountId returns the PaymentAccountId field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequest) GetPaymentAccountId() string {
	if o == nil || IsNil(o.PaymentAccountId) {
		var ret string
		return ret
	}
	return *o.PaymentAccountId
}

// GetPaymentAccountIdOk returns a tuple with the PaymentAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequest) GetPaymentAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentAccountId) {
		return nil, false
	}
	return o.PaymentAccountId, true
}

// HasPaymentAccountId returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequest) HasPaymentAccountId() bool {
	if o != nil && !IsNil(o.PaymentAccountId) {
		return true
	}

	return false
}

// SetPaymentAccountId gets a reference to the given string and assigns it to the PaymentAccountId field.
func (o *OpenapiPayoutCreateRequest) SetPaymentAccountId(v string) {
	o.PaymentAccountId = &v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequest) GetPurpose() string {
	if o == nil || IsNil(o.Purpose) {
		var ret string
		return ret
	}
	return *o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequest) GetPurposeOk() (*string, bool) {
	if o == nil || IsNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequest) HasPurpose() bool {
	if o != nil && !IsNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given string and assigns it to the Purpose field.
func (o *OpenapiPayoutCreateRequest) SetPurpose(v string) {
	o.Purpose = &v
}

// GetSender returns the Sender field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequest) GetSender() OpenapiPayoutCreateRequestSender {
	if o == nil || IsNil(o.Sender) {
		var ret OpenapiPayoutCreateRequestSender
		return ret
	}
	return *o.Sender
}

// GetSenderOk returns a tuple with the Sender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequest) GetSenderOk() (*OpenapiPayoutCreateRequestSender, bool) {
	if o == nil || IsNil(o.Sender) {
		return nil, false
	}
	return o.Sender, true
}

// HasSender returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequest) HasSender() bool {
	if o != nil && !IsNil(o.Sender) {
		return true
	}

	return false
}

// SetSender gets a reference to the given OpenapiPayoutCreateRequestSender and assigns it to the Sender field.
func (o *OpenapiPayoutCreateRequest) SetSender(v OpenapiPayoutCreateRequestSender) {
	o.Sender = &v
}

// GetWalletId returns the WalletId field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequest) GetWalletId() string {
	if o == nil || IsNil(o.WalletId) {
		var ret string
		return ret
	}
	return *o.WalletId
}

// GetWalletIdOk returns a tuple with the WalletId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequest) GetWalletIdOk() (*string, bool) {
	if o == nil || IsNil(o.WalletId) {
		return nil, false
	}
	return o.WalletId, true
}

// HasWalletId returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequest) HasWalletId() bool {
	if o != nil && !IsNil(o.WalletId) {
		return true
	}

	return false
}

// SetWalletId gets a reference to the given string and assigns it to the WalletId field.
func (o *OpenapiPayoutCreateRequest) SetWalletId(v string) {
	o.WalletId = &v
}

func (o OpenapiPayoutCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenapiPayoutCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CustomId) {
		toSerialize["custom_id"] = o.CustomId
	}
	if !IsNil(o.OnBehalfOf) {
		toSerialize["on_behalf_of"] = o.OnBehalfOf
	}
	if !IsNil(o.PaymentAccount) {
		toSerialize["payment_account"] = o.PaymentAccount
	}
	if !IsNil(o.PaymentAccountId) {
		toSerialize["payment_account_id"] = o.PaymentAccountId
	}
	if !IsNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	if !IsNil(o.Sender) {
		toSerialize["sender"] = o.Sender
	}
	if !IsNil(o.WalletId) {
		toSerialize["wallet_id"] = o.WalletId
	}
	return toSerialize, nil
}

type NullableOpenapiPayoutCreateRequest struct {
	value *OpenapiPayoutCreateRequest
	isSet bool
}

func (v NullableOpenapiPayoutCreateRequest) Get() *OpenapiPayoutCreateRequest {
	return v.value
}

func (v *NullableOpenapiPayoutCreateRequest) Set(val *OpenapiPayoutCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapiPayoutCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapiPayoutCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapiPayoutCreateRequest(val *OpenapiPayoutCreateRequest) *NullableOpenapiPayoutCreateRequest {
	return &NullableOpenapiPayoutCreateRequest{value: val, isSet: true}
}

func (v NullableOpenapiPayoutCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapiPayoutCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


