/*
Resources

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rafikigen

import (
	"encoding/json"
)

// checks if the OpenapiPayoutCreateRequestSender type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OpenapiPayoutCreateRequestSender{}

// OpenapiPayoutCreateRequestSender An optional property for incorporating sender details. Please refer to the \"ðŸ’¡ **Compliance requirements**\" documentation above.
type OpenapiPayoutCreateRequestSender struct {
	Address *OpenapiPayoutCreateRequestSenderAddress `json:"address,omitempty"`
	Individual *OpenapiPayoutCreateRequestSenderIndividual `json:"individual,omitempty"`
	// <span style=\"color:#e95f6a;\">required if sender is provided</span>  The individual full name or registered business legal name
	Name *string `json:"name,omitempty"`
	// <span style=\"color:#e95f6a;\">required if sender is provided</span>  Either `INDIVIDUAL` or `BUSINESS`
	Type *string `json:"type,omitempty"`
}

// NewOpenapiPayoutCreateRequestSender instantiates a new OpenapiPayoutCreateRequestSender object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenapiPayoutCreateRequestSender() *OpenapiPayoutCreateRequestSender {
	this := OpenapiPayoutCreateRequestSender{}
	return &this
}

// NewOpenapiPayoutCreateRequestSenderWithDefaults instantiates a new OpenapiPayoutCreateRequestSender object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenapiPayoutCreateRequestSenderWithDefaults() *OpenapiPayoutCreateRequestSender {
	this := OpenapiPayoutCreateRequestSender{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequestSender) GetAddress() OpenapiPayoutCreateRequestSenderAddress {
	if o == nil || IsNil(o.Address) {
		var ret OpenapiPayoutCreateRequestSenderAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequestSender) GetAddressOk() (*OpenapiPayoutCreateRequestSenderAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequestSender) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given OpenapiPayoutCreateRequestSenderAddress and assigns it to the Address field.
func (o *OpenapiPayoutCreateRequestSender) SetAddress(v OpenapiPayoutCreateRequestSenderAddress) {
	o.Address = &v
}

// GetIndividual returns the Individual field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequestSender) GetIndividual() OpenapiPayoutCreateRequestSenderIndividual {
	if o == nil || IsNil(o.Individual) {
		var ret OpenapiPayoutCreateRequestSenderIndividual
		return ret
	}
	return *o.Individual
}

// GetIndividualOk returns a tuple with the Individual field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequestSender) GetIndividualOk() (*OpenapiPayoutCreateRequestSenderIndividual, bool) {
	if o == nil || IsNil(o.Individual) {
		return nil, false
	}
	return o.Individual, true
}

// HasIndividual returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequestSender) HasIndividual() bool {
	if o != nil && !IsNil(o.Individual) {
		return true
	}

	return false
}

// SetIndividual gets a reference to the given OpenapiPayoutCreateRequestSenderIndividual and assigns it to the Individual field.
func (o *OpenapiPayoutCreateRequestSender) SetIndividual(v OpenapiPayoutCreateRequestSenderIndividual) {
	o.Individual = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequestSender) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequestSender) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequestSender) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OpenapiPayoutCreateRequestSender) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OpenapiPayoutCreateRequestSender) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenapiPayoutCreateRequestSender) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OpenapiPayoutCreateRequestSender) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OpenapiPayoutCreateRequestSender) SetType(v string) {
	o.Type = &v
}

func (o OpenapiPayoutCreateRequestSender) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OpenapiPayoutCreateRequestSender) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Individual) {
		toSerialize["individual"] = o.Individual
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableOpenapiPayoutCreateRequestSender struct {
	value *OpenapiPayoutCreateRequestSender
	isSet bool
}

func (v NullableOpenapiPayoutCreateRequestSender) Get() *OpenapiPayoutCreateRequestSender {
	return v.value
}

func (v *NullableOpenapiPayoutCreateRequestSender) Set(val *OpenapiPayoutCreateRequestSender) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenapiPayoutCreateRequestSender) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenapiPayoutCreateRequestSender) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenapiPayoutCreateRequestSender(val *OpenapiPayoutCreateRequestSender) *NullableOpenapiPayoutCreateRequestSender {
	return &NullableOpenapiPayoutCreateRequestSender{value: val, isSet: true}
}

func (v NullableOpenapiPayoutCreateRequestSender) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenapiPayoutCreateRequestSender) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


