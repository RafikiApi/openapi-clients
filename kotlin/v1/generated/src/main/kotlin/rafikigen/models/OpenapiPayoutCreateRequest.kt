/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package rafikigen.models

import rafikigen.models.OpenapiPaymentAccountGetOrCreateRequest
import rafikigen.models.OpenapiPayoutCreateRequestAmount
import rafikigen.models.OpenapiPayoutCreateRequestSender

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param amount 
 * @param customId An optional unique custom id that can be used to reconcile payouts with your own internal systems, this is particularly useful in the event of network failures.  The accepted format can include up to 64 characters, which may consist of both letters, digits, and the symbols \"-\" and \"_\".
 * @param paymentAccount 
 * @param paymentAccountId <span style=\"color:#e95f6a;\">required if payment_account is empty</span>  The payment account ID represents a pre-existing payment account that acts as the recipient for the payout.
 * @param sender 
 * @param walletId The wallet ID from which to disburse money, if not provided, we will attempt to use the one that matches the provided currency amount.
 */


data class OpenapiPayoutCreateRequest (

    @Json(name = "amount")
    val amount: OpenapiPayoutCreateRequestAmount? = null,

    /* An optional unique custom id that can be used to reconcile payouts with your own internal systems, this is particularly useful in the event of network failures.  The accepted format can include up to 64 characters, which may consist of both letters, digits, and the symbols \"-\" and \"_\". */
    @Json(name = "custom_id")
    val customId: kotlin.String? = null,

    @Json(name = "payment_account")
    val paymentAccount: OpenapiPaymentAccountGetOrCreateRequest? = null,

    /* <span style=\"color:#e95f6a;\">required if payment_account is empty</span>  The payment account ID represents a pre-existing payment account that acts as the recipient for the payout. */
    @Json(name = "payment_account_id")
    val paymentAccountId: kotlin.String? = null,

    @Json(name = "sender")
    val sender: OpenapiPayoutCreateRequestSender? = null,

    /* The wallet ID from which to disburse money, if not provided, we will attempt to use the one that matches the provided currency amount. */
    @Json(name = "wallet_id")
    val walletId: kotlin.String? = null

)

