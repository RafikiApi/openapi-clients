/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package rafikigen.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param code The state code signifies the overall status of a payout. For detailed information about the meaning of each state, please consult the lifecycle section above.
 * @param context Together with the \"code\" property, the \"context\" property offers additional context and information, whenever possible, about the specific state. For instance, if a payout fails, there are numerous reasons why this might occur. The \"context\" property will provide more detailed information in such cases.
 */


data class OpenapiPayoutCreateResponseState (

    /* The state code signifies the overall status of a payout. For detailed information about the meaning of each state, please consult the lifecycle section above. */
    @Json(name = "code")
    val code: OpenapiPayoutCreateResponseState.Code? = null,

    /* Together with the \"code\" property, the \"context\" property offers additional context and information, whenever possible, about the specific state. For instance, if a payout fails, there are numerous reasons why this might occur. The \"context\" property will provide more detailed information in such cases. */
    @Json(name = "context")
    val context: kotlin.String? = null

) {

    /**
     * The state code signifies the overall status of a payout. For detailed information about the meaning of each state, please consult the lifecycle section above.
     *
     * Values: pENDING,rEVERSED,sENT,cANCELLED,fAILED
     */
    @JsonClass(generateAdapter = false)
    enum class Code(val value: kotlin.String) {
        @Json(name = "PENDING") pENDING("PENDING"),
        @Json(name = "REVERSED") rEVERSED("REVERSED"),
        @Json(name = "SENT") sENT("SENT"),
        @Json(name = "CANCELLED") cANCELLED("CANCELLED"),
        @Json(name = "FAILED") fAILED("FAILED");
    }
}

